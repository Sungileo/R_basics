{
  "hash": "c4391f71821629683c63e8df60cc377e",
  "result": {
    "markdown": "---\ntitle: \"PT.8 - 조건문, 반복문 복습\"\ndescription: \"2023-2학기 튜터링\"\nauthor: \"Sungil Park\"\ndate: \"2023/11/21\"\n---\n\n\n\n\n## 조건문 복습 (교재)\n\n\n::: {.cell}\n\n```{.r .cell-code}\njob.type <- 'A'\n\nif(job.type=='B'){\n  bonus <- 200\n}else{\n  bonus <- 100\n}\nprint(bonus)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 100\n```\n:::\n:::\n\n\n## else 생략\n\n\n::: {.cell}\n\n```{.r .cell-code}\njob.type <- 'B'\nbonus <- 100\nif(job.type=='A'){\n  bonus <- 200  #직무유형이 A일 때 실행.\n}\nprint(bonus)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 100\n```\n:::\n:::\n\n\n## 다중 if-else문\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscore <- 85\n\nif(score>90){\n  grade <- 'A'\n}else if(score>80){\n  grade <- 'B'\n}else if(score>70){\n  grade <- 'C'\n}else if(score>60){\n  grade <- 'D'\n}else{\n  grade <- 'F'\n}\nprint(grade)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"B\"\n```\n:::\n:::\n\n\n## 조건문에서 논리 연산자의 사용\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 10\nb <- 2\n\nif(a>5&b>5){\n  print(a+b)\n}else{\n  print(\"조건 미충족\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"조건 미충족\"\n```\n:::\n\n```{.r .cell-code}\nif(a>5|b>30){\n  print(a*b)\n}else{\n  print(\"조건 미충족\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 10\nb <- 20\n\nif(a > 5 & b > 5){\n  c = a + b\n}else if(a > 5 | b > 30){\n  c = a * b\n}\nprint(c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30\n```\n:::\n:::\n\n\n## ifelse문\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 10\nb <- 20\n\nif(a>b){\n  c <- a\n}else{\n  c <- b\n}\nprint(c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 10 \nb <- 20\nc <- ifelse(a>b, a, b) \nprint(c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n:::\n\n\n---\n\n## 반복문 이용 구구단\n\n - `cat()` `\\n` : 줄바꿈 기호(ENTER)\n\n - `print()` `\\n` : 문자열 출력\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:9){\n  cat('2 *', i, '=', 2*i, '\\n')  #'\\n'은 아래로 출력시킴.\n  cat('결과값: ', 2*i, '\\n')  #'cat()'함수 = 여러 값들을 출력시킬 수 있음.\n}                           # 파이썬에서 print()함수\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n2 * 1 = 2 \n결과값:  2 \n2 * 2 = 4 \n결과값:  4 \n2 * 3 = 6 \n결과값:  6 \n2 * 4 = 8 \n결과값:  8 \n2 * 5 = 10 \n결과값:  10 \n2 * 6 = 12 \n결과값:  12 \n2 * 7 = 14 \n결과값:  14 \n2 * 8 = 16 \n결과값:  16 \n2 * 9 = 18 \n결과값:  18 \n```\n:::\n:::\n\n\n## for문 안에서 if문의 사용(시험출제!)\n\n - 1 ~ 20 중 짝수만 출력\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:20){\n  if(i%%2==0){\n    print(i)\n  }\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n[1] 4\n[1] 6\n[1] 8\n[1] 10\n[1] 12\n[1] 14\n[1] 16\n[1] 18\n[1] 20\n```\n:::\n:::\n\n\n##1~100 사이의 숫자의 합 출력\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum <- 0\nfor(i in 1:100){\n  sum <- sum + i\n}\nprint(sum)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5050\n```\n:::\n:::\n\n\n## iris에서 꽃잎의 길이에 따른 분류 작업\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmylabel <- c()                          # 비어 있는 벡터 선언\n\nfor(i in 1:nrow(iris)){\n  if(iris$Petal.Length[i] <= 1.6){      \n    mylabel[i] <- 'L'                   # 꽃잎의 길이(Petal.Length)가 1.6 이하면 L\n  }else if(iris$Petal.Length[i] >= 5.1){\n    mylabel[i] <- 'H'                   # 꽃잎의 길이(Petal.Length)가 5.1 이상이면 H \n  }else{                                \n    mylabel[i] <- 'M'                   # 나머지는 M\n  }\n}\n\nprint(mylabel)            #mylabel벡터 출력.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"L\" \"L\" \"L\" \"L\" \"L\" \"M\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\"\n [19] \"M\" \"L\" \"M\" \"L\" \"L\" \"M\" \"M\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\"\n [37] \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"M\" \"L\" \"L\" \"L\" \"L\" \"L\" \"M\" \"M\" \"M\" \"M\"\n [55] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [73] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [91] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\"\n[109] \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"M\" \"H\" \"M\" \"H\" \"H\"\n[127] \"M\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\"\n[145] \"H\" \"H\" \"M\" \"H\" \"H\" \"H\"\n```\n:::\n:::\n\n\n### mylabel을 데이터프레임으로\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewds <- data.frame(iris$Petal.Length,mylabel)\n\nhead(newds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  iris.Petal.Length mylabel\n1               1.4       L\n2               1.4       L\n3               1.3       L\n4               1.5       L\n5               1.4       L\n6               1.7       M\n```\n:::\n\n```{.r .cell-code}\ntail(newds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    iris.Petal.Length mylabel\n145               5.7       H\n146               5.2       H\n147               5.0       M\n148               5.2       H\n149               5.4       H\n150               5.1       H\n```\n:::\n:::\n\n\n## while문\n\n - `break` 반복문 실행중 조건 부합시 그만 실행하기 \n \n - 1 ~ 10 까지 더하기 중 5 이상값 나오면 그만하기 (1+2+3+4+5)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum <- 0\n\nfor(i in 1:10){\n  sum <- sum+i\n  if(i>=5){\n    break\n  }\n}\n\nsum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 15\n```\n:::\n:::\n\n\n\n## 복습끝\n\n - `next` 조건 부합시 건너뛰기\n \n - i가 5,6,7,8이면 건너뛰어라 (파이썬의 continue함수와 같음)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum <- 0\nfor(i in 1:10){\n  sum <- sum+i\n  if(i>=5 & i<=8){\n    next\n  }\n  print(c(i,sum))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 1\n[1] 2 3\n[1] 3 6\n[1]  4 10\n[1]  9 45\n[1] 10 55\n```\n:::\n\n```{.r .cell-code}\nsum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 55\n```\n:::\n:::\n\n\n - 1~10까지 더하기 중 짝수는 건너뛰기(홀수만 더해라, 1+3+5+7+9)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum <- 0\nfor(i in 1:10){\n  if(i%%2==0){  \n    next\n  }\n  sum=sum+i\n}\nsum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 25\n```\n:::\n:::\n\n\n## `apply()` 함수\n\n -  apply(데이터, 행/열방향, 적용함수)\n\n - 행 = 1, 열 = 2\n \n\n::: {.cell}\n\n```{.r .cell-code}\nscore <- data.frame(철수 = c(90, 80, 70), \n                    영희 = c(80, 78, 89),\n                    백구 = c(22, 32, 11))\n\nrow.names(score) <- c(\"수학\", \"국어\", \"영어\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n|     | 철수| 영희| 백구|\n|:----|----:|----:|----:|\n|수학 |   90|   80|   22|\n|국어 |   80|   78|   32|\n|영어 |   70|   89|   11|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\napply(score,1,mean)  #행방향으로 평균값 계산\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    수학     국어     영어 \n64.00000 63.33333 56.66667 \n```\n:::\n\n```{.r .cell-code}\napply(score,2,mean)  #열방향으로 평균값 계산\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    철수     영희     백구 \n80.00000 82.33333 21.66667 \n```\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(score,1,summary)  #행방향으로 summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        수학     국어     영어\nMin.      22 32.00000 11.00000\n1st Qu.   51 55.00000 40.50000\nMedian    80 78.00000 70.00000\nMean      64 63.33333 56.66667\n3rd Qu.   85 79.00000 79.50000\nMax.      90 80.00000 89.00000\n```\n:::\n\n```{.r .cell-code}\napply(score,2,summary)  #열방향으로 summary \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        철수     영희     백구\nMin.      70 78.00000 11.00000\n1st Qu.   75 79.00000 16.50000\nMedian    80 80.00000 22.00000\nMean      80 82.33333 21.66667\n3rd Qu.   85 84.50000 27.00000\nMax.      90 89.00000 32.00000\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}