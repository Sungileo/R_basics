[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "2023-2학기 R 기초 튜터링",
    "section": "",
    "text": "PT.8 - 조건문, 반복문 복습\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nNov 21, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.7 - 반복문\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nNov 14, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.6 - 간단한 데이터 탐색 & 시각화\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nNov 7, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.6 - 조건문\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nNov 7, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.5 - 중간고사\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nOct 31, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.4 - 데이터 불러오기, 저장하기\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nOct 24, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.3 - 데이터프레임, subset, 행렬의 연산\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nOct 17, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.2 - 벡터, 리스트, 팩터, 행렬\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nOct 10, 2023\n\n\nSungil Park\n\n\n\n\n\n\n  \n\n\n\n\nPT.1 - 설치 & R에 대해\n\n\n\n\n\n2023-2학기 튜터링\n\n\n\n\n\n\nSep 14, 2023\n\n\nSungil Park\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "contact",
    "section": "",
    "text": "화이팅\n\n20191534 박성일\n010 9811 4050\nsungileo@naver.com"
  },
  {
    "objectID": "posts/0914_pt1.html#r",
    "href": "posts/0914_pt1.html#r",
    "title": "PT.1 - 설치 & R에 대해",
    "section": "R",
    "text": "R\n\nR에 대해\n\n통계 계산과 그래픽을 위한 프로그래밍 언어이자 소프트웨어 환경\n뉴질랜드 오클랜드 대학의 로스 이하카와 로버트 젠틀맨에 의해 개발(1992)\nGPL 하에 배포되어 비용에 부담없이 자유롭게 사용\n많은 연구자들에 의해 새롭게 만들어진 최신의 알고리즘과 로직들을 Package 형태로 제공하여 다른 어떤 통계 소프트웨어들보다도 다양한 분석방법 등을 제공\n초기 접근이 다른 통계 소프트웨어보다 불편하게 느껴질 수 있지만, 익숙해지면 편하게 다룰 수 있음\n\n\n\n설치\nr-project.org\ncran\n\nR 패키지를 호스팅, 저장, 공유하는 공식적인 위치\n영남대 cran"
  },
  {
    "objectID": "posts/0914_pt1.html#rstudio",
    "href": "posts/0914_pt1.html#rstudio",
    "title": "PT.1 - 설치 & R에 대해",
    "section": "Rstudio",
    "text": "Rstudio\n\nRstudio\n\nR 프로그래밍 언어와 관련된 통합 개발 환경(IDE) 중 하나\nR 패키지를 설치하고 관리하는 도구를 제공, 함수 및 패키지에 대한 도움말에 쉽게 액세스\n데이터 구조를 검사하고 조작하는 도구를 제공, 스크립트 편집\n프로젝트관리, 버전관리, Git, 보고서 작성 등등..\n\n\n\n설치\nPosit"
  },
  {
    "objectID": "posts/1010_pt2.html",
    "href": "posts/1010_pt2.html",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "",
    "text": "tap 은 자동완성\nF1 은 함수 설명 문서 보기"
  },
  {
    "objectID": "posts/1010_pt2.html#tip",
    "href": "posts/1010_pt2.html#tip",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "",
    "text": "tap 은 자동완성\nF1 은 함수 설명 문서 보기"
  },
  {
    "objectID": "posts/1010_pt2.html#변수-지우기",
    "href": "posts/1010_pt2.html#변수-지우기",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "변수 지우기",
    "text": "변수 지우기\nrm = remove 줄임말\nls()는 전체 변수 출력\nrm(list = ls())는 전체변수 삭제\nrm(변수명)은 변수명만 삭제\n\nremove(list = ls())\nrm(list = ls())\n\n\nrm(변수명)"
  },
  {
    "objectID": "posts/1010_pt2.html#벡터",
    "href": "posts/1010_pt2.html#벡터",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "벡터",
    "text": "벡터\nGNP &lt;- c(2090,2450,960)\n\nGNP 라는 변수에 2090, 2450, 960 3개의 숫자 요소를 가진 벡터 생성\n\nnames(GNP) &lt;- c(\"korea\",\"japan\",\"nepal\")\n\n각 요소에 “korea”, “japan”, “nepal”의 이름 지정\n\n\nGNP &lt;- c(2090,2450,960)\nnames(GNP) &lt;- c(\"korea\",\"japan\",\"nepal\")\n\n\n요소에 지정된 이름으로 값 출력 (인덱싱)\n단일 값 출력\n\nGNP[\"korea\"]\n\nkorea \n 2090 \n\n\n벡터 사용 여러개의 값 출력\n\nGNP[c(\"korea\",\"nepal\")]\n\nkorea nepal \n 2090   960"
  },
  {
    "objectID": "posts/1010_pt2.html#변수에-조건을-지정하기",
    "href": "posts/1010_pt2.html#변수에-조건을-지정하기",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "변수에 조건을 지정하기",
    "text": "변수에 조건을 지정하기\nd 라는 변수에 1~9까지의 숫자 벡터 생성\n\nd &lt;- c(1,2,3,4,5,6,7,8,9)\nd &lt;- c(1:9) \n\ncondi 라는 변수에 7이하 & 3이상을 만족하는 d 지정\n\nTRUE, FALSE 값으로 출력\n\n\ncondi &lt;- d &lt;= 7 & d &gt;= 3\n\ncondi\n\n[1] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\n\n\n\n인덱싱으로 d에서의 값 출력하기\n\n\nd[condi]\n\n[1] 3 4 5 6 7\n\n\n& : 두 조건을 모두 만족해야됨, (7보다 작으면서, 3보다 큰 수)\n| : 두 조건중 하나만 만족하면됨, (7보다 크거나, 3보다 작거나), (엔터키 위 shift + \\)\n\ncondi_2 &lt;- d &lt;= 3 | d &gt;= 7\nd[condi]\n\n[1] 3 4 5 6 7"
  },
  {
    "objectID": "posts/1010_pt2.html#리스트",
    "href": "posts/1010_pt2.html#리스트",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "리스트",
    "text": "리스트\n\n벡터는 한가지 타입의 요소들만을 담을 수 있음 (숫자면 숫자만, 문자면 문자만)\n리스트는 여러가지 타입의 요소를 담을 수 있음\n\n\nlist_example &lt;- list(1, 2, c(3,4), \"munja\", TRUE, FALSE)\n\nlist_example\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3 4\n\n[[4]]\n[1] \"munja\"\n\n[[5]]\n[1] TRUE\n\n[[6]]\n[1] FALSE\n\n\n\n리스트와 생성\n\nmy.info &lt;- list(name='Tom', \n                age=60, \n                status=TRUE, \n                score=c(90, 85, 70, 84))\n\n\n\n리스트 출력\n\nmy.info\n\n$name\n[1] \"Tom\"\n\n$age\n[1] 60\n\n$status\n[1] TRUE\n\n$score\n[1] 90 85 70 84\n\n\n\n\n리스트의 인덱싱\n\n# 첫째 요소\nmy.info[1]\n\n$name\n[1] \"Tom\"\n\n# 이름이 name인 요소\nmy.info$name\n\n[1] \"Tom\"\n\n# 리스트의 2,3번쨰 요소\nmy.info[c(2,3)]\n\n$age\n[1] 60\n\n$status\n[1] TRUE"
  },
  {
    "objectID": "posts/1010_pt2.html#팩터",
    "href": "posts/1010_pt2.html#팩터",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "팩터",
    "text": "팩터\n\n팩터는 범주형 데이터를 지정하는데 사용\n예시)\n\nbt.vct 라는 문자형 변수 벡터 지정\nbt.fct 라는 팩터 지정\n\n\n\n팩터 요소 확인하기\n\nbt.vct &lt;- c('A','B','B','O','AB','A')\n\nbt.fct &lt;- factor(bt.vct)\n\nstr()함수는 지정한 변수의 타입을 확인할때 사용\n\nstr(bt.vct)\n\n chr [1:6] \"A\" \"B\" \"B\" \"O\" \"AB\" \"A\"\n\nstr(bt.fct)\n\n Factor w/ 4 levels \"A\",\"AB\",\"B\",\"O\": 1 3 3 4 2 1\n\n\nlevels()함수는 팩터 변수의 요소값을 확인할때 사용\n\nlevels(bt.fct)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\n\n\n\n팩터의 인덱싱\n\nbt.fct[5]\n\n[1] AB\nLevels: A AB B O\n\nbt.fct[c(2,5)]\n\n[1] B  AB\nLevels: A AB B O\n\n\n팩터,벡터를 숫자형으로 바꾸기\n\nas.integer(bt.fct)\n\n[1] 1 3 3 4 2 1\n\nas.integer(bt.vct)\n\nWarning: 강제형변환에 의해 생성된 NA 입니다\n\n\n[1] NA NA NA NA NA NA\n\n\n\n\n팩터에 값 추가\n\n# 기존 6개 값을 가진 팩터에 7번째 값 추가\nbt.fct[7] &lt;- 'B'\nbt.fct\n\n[1] A  B  B  O  AB A  B \nLevels: A AB B O\n\n\n\n\n요소 외 값 추가\n\n# 팩터 요소(A, AB, B, O)에 포함되지 않은 값을 추가하면..\n# Warning message = 경고(O), 에러(X)\n# NA 값으로 입력됨\nbt.fct[8] &lt;- 'C'     \n\nWarning in `[&lt;-.factor`(`*tmp*`, 8, value = \"C\"): 요인의 수준(factor level)이\n올바르지 않아 NA가 생성되었습니다.\n\nbt.fct\n\n[1] A    B    B    O    AB   A    B    &lt;NA&gt;\nLevels: A AB B O\n\n\n\n\n팩터의 요소 추가\n\nlevels() 함수를 써서 \"C\" 요소 추가\n8번째 값에 \"C\" 추가\n\n\nlevels(bt.fct) &lt;- c(levels(bt.fct),\"C\")\nbt.fct[8] &lt;- 'C'     \nbt.fct\n\n[1] A  B  B  O  AB A  B  C \nLevels: A AB B O C"
  },
  {
    "objectID": "posts/1010_pt2.html#행렬-matrix",
    "href": "posts/1010_pt2.html#행렬-matrix",
    "title": "PT.2 - 벡터, 리스트, 팩터, 행렬",
    "section": "행렬 (matrix)",
    "text": "행렬 (matrix)\n\n행렬의 생성\nz 라는 변수에 1~20 의 값, 4행 5열의 행렬 생성 (행 우선)\n\nz &lt;- matrix(1:20, nrow=4, ncol=5)\nz\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\n\nz1 라는 변수에 1~20 의 값, 4행 5열의 행렬 생성 (열 우선)\n\nz1 &lt;- matrix(1:20, nrow=4, ncol=5, byrow=TRUE)\nz1\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n\n\n\n행렬 붙히기 (combine)\nx, y라는 변수에 4개의 값을 가진 벡터 생성\nz 라는 변수에 1~20 의 값, 4행 5열의 행렬 생성\n\nx &lt;- 1:4\ny &lt;- 5:8\nz &lt;- matrix(1:20, nrow=4, ncol=5)\n\ncbind() 함수는 열 기준으로 값을 붙힌다.(column bind)\nrbind() 함수는 행 기준으로 값을 붙힌다.(row bind)\n\nm1 &lt;- cbind(x,y)\nm1\n\n     x y\n[1,] 1 5\n[2,] 2 6\n[3,] 3 7\n[4,] 4 8\n\nm2 &lt;- rbind(x,y)\nm2\n\n  [,1] [,2] [,3] [,4]\nx    1    2    3    4\ny    5    6    7    8\n\n\n\nm3 &lt;- rbind(m2,x)\nm3\n\n  [,1] [,2] [,3] [,4]\nx    1    2    3    4\ny    5    6    7    8\nx    1    2    3    4\n\n\n\nm4 &lt;- cbind(z,x)\nm4\n\n                  x\n[1,] 1 5  9 13 17 1\n[2,] 2 6 10 14 18 2\n[3,] 3 7 11 15 19 3\n[4,] 4 8 12 16 20 4\n\n\n\n\n행렬의 인덱싱\n\npython과는 달리 1부터 시작\n\n\nz &lt;- matrix(1:20, nrow=4, ncol=5)\nz\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\n\nmatrix[행, 열]\n\n# 2행 3열의 값\nz[2,3]\n\n[1] 10\n\n# 2행의 모든 값\nz[2,]\n\n[1]  2  6 10 14 18\n\n# 4열의 모든 값\nz[,4]\n\n[1] 13 14 15 16\n\n# 모든 값\nz[]\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\n\n\n# 2행 1~3열의 값\nz[2, 1:3]\n\n[1]  2  6 10\n\n# 1행 1, 2, 4 열의 값\nz[1, c(1,2,4)]\n\n[1]  1  5 13\n\n# 1~2행의 모든 값\nz[1:2, ]\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n\n# 1열, 4열의 모든 값\nz[, c(1,4)]\n\n     [,1] [,2]\n[1,]    1   13\n[2,]    2   14\n[3,]    3   15\n[4,]    4   16\n\n\n\n\n행렬의 행이름, 열이름 넣기\n\nscore &lt;- matrix(c(90,85,69,78,85,96,49,95,90,80,70,60), nrow=4, ncol=3)\ncolnames(score) &lt;- c(\"국어\",\"영어\",\"수학\")\nrownames(score) &lt;- c(\"철수\",\"영희\",\"릅신\",\"조던\")\nscore\n\n     국어 영어 수학\n철수   90   85   90\n영희   85   96   80\n릅신   69   49   70\n조던   78   95   60"
  },
  {
    "objectID": "posts/1017_pt3.html",
    "href": "posts/1017_pt3.html",
    "title": "PT.3 - 데이터프레임, subset, 행렬의 연산",
    "section": "",
    "text": "rm(list = ls())"
  },
  {
    "objectID": "posts/1017_pt3.html#데이터-프레임",
    "href": "posts/1017_pt3.html#데이터-프레임",
    "title": "PT.3 - 데이터프레임, subset, 행렬의 연산",
    "section": "데이터 프레임",
    "text": "데이터 프레임\n데이터프레임은 R에서 가장 많이 쓰이는 데이터 구조\n\n2차원 형태의 데이터 구조 (행, 열)\n데이터 형태(숫자, 문자, Boolean)에 국한받지 않음\ndata.frame()함수를 이용하여 생성\n\ncity, rank라는 벡터 생성 후 city.info라는 데이터프레임 생성\n\ncity &lt;- c(\"Seoul\", \"Tokyo\", \"Washington\")\nrank &lt;- c(1,3,2) \n\ncity.info &lt;- data.frame(city, rank)\ncity.info\n\n        city rank\n1      Seoul    1\n2      Tokyo    3\n3 Washington    2\n\n\n\niris 데이터셋\niris 데이터셋은 R에 내장되어있는 데이터셋으로, 붓꽃의 정보를 담고 있다.\n\n\n\n\n\n\n\n열 이름\n정보\n\n\n\n\nSepal Length\n꽃받침의 길이\n\n\nSepal Width\n꽃받침의 너비\n\n\nPetal Length\n꽃잎의 길이\n\n\nPetal Width\n꽃잎의 너비\n\n\nSpecies\n꽃의 종류 정보 (setosa / versicolor / virginica 의 3종류로 구분)\n\n\n\nstr()함수는 데이터프레임의 정보를 확인할 수 있다.\n\n150 obs : 150 observations 관측치 수 (행)\n5 variables : 변수 수 (열)\n$ Sepal.Length: num 5.1 4.9 4.7 .... : 열 이름, 데이터 형태(num), 내용\n…\n$ Species     : Factor w/ 3 levels \"setosa\",\"versicolor : 열 이름, 형태(factor), 팩터 정보, 내용\n\n\nstr(iris)\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n데이터프레임의 정보\n\ndim(iris)         # 행과 열의 개수 출력 (Dimensions)\n\n[1] 150   5\n\nnrow(iris)        # 행의 개수 출력 (number of row)\n\n[1] 150\n\nncol(iris)        # 열의 개수 출력 (number of column)\n\n[1] 5\n\ncolnames(iris)    # 열 이름 출력, names()와 결과 동일 (column names)\n\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n\n\n\n\n데이터프레임 일부분 출력\nhead(데이터, 개수), tail(데이터, 개수)함수는 데이터의 앞, 뒷부분 일부를 개수만큼 출력한다.\n\nhead(iris)        # 데이터셋의 앞부분 일부 출력\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\ntail(iris,4)        # 데이터셋의 뒷부분 일부 출력력\n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n147          6.3         2.5          5.0         1.9 virginica\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n\n\n\n\n데이터프레임의 인덱싱\n\n행렬(matrix) 인덱싱과 동일\n\n\niris[,c(1:2)]                      # 1,2열의 모든 데이터\n\n    Sepal.Length Sepal.Width\n1            5.1         3.5\n2            4.9         3.0\n3            4.7         3.2\n4            4.6         3.1\n5            5.0         3.6\n6            5.4         3.9\n7            4.6         3.4\n8            5.0         3.4\n9            4.4         2.9\n10           4.9         3.1\n11           5.4         3.7\n12           4.8         3.4\n13           4.8         3.0\n14           4.3         3.0\n15           5.8         4.0\n16           5.7         4.4\n17           5.4         3.9\n18           5.1         3.5\n19           5.7         3.8\n20           5.1         3.8\n21           5.4         3.4\n22           5.1         3.7\n23           4.6         3.6\n24           5.1         3.3\n25           4.8         3.4\n26           5.0         3.0\n27           5.0         3.4\n28           5.2         3.5\n29           5.2         3.4\n30           4.7         3.2\n31           4.8         3.1\n32           5.4         3.4\n33           5.2         4.1\n34           5.5         4.2\n35           4.9         3.1\n36           5.0         3.2\n37           5.5         3.5\n38           4.9         3.6\n39           4.4         3.0\n40           5.1         3.4\n41           5.0         3.5\n42           4.5         2.3\n43           4.4         3.2\n44           5.0         3.5\n45           5.1         3.8\n46           4.8         3.0\n47           5.1         3.8\n48           4.6         3.2\n49           5.3         3.7\n50           5.0         3.3\n51           7.0         3.2\n52           6.4         3.2\n53           6.9         3.1\n54           5.5         2.3\n55           6.5         2.8\n56           5.7         2.8\n57           6.3         3.3\n58           4.9         2.4\n59           6.6         2.9\n60           5.2         2.7\n61           5.0         2.0\n62           5.9         3.0\n63           6.0         2.2\n64           6.1         2.9\n65           5.6         2.9\n66           6.7         3.1\n67           5.6         3.0\n68           5.8         2.7\n69           6.2         2.2\n70           5.6         2.5\n71           5.9         3.2\n72           6.1         2.8\n73           6.3         2.5\n74           6.1         2.8\n75           6.4         2.9\n76           6.6         3.0\n77           6.8         2.8\n78           6.7         3.0\n79           6.0         2.9\n80           5.7         2.6\n81           5.5         2.4\n82           5.5         2.4\n83           5.8         2.7\n84           6.0         2.7\n85           5.4         3.0\n86           6.0         3.4\n87           6.7         3.1\n88           6.3         2.3\n89           5.6         3.0\n90           5.5         2.5\n91           5.5         2.6\n92           6.1         3.0\n93           5.8         2.6\n94           5.0         2.3\n95           5.6         2.7\n96           5.7         3.0\n97           5.7         2.9\n98           6.2         2.9\n99           5.1         2.5\n100          5.7         2.8\n101          6.3         3.3\n102          5.8         2.7\n103          7.1         3.0\n104          6.3         2.9\n105          6.5         3.0\n106          7.6         3.0\n107          4.9         2.5\n108          7.3         2.9\n109          6.7         2.5\n110          7.2         3.6\n111          6.5         3.2\n112          6.4         2.7\n113          6.8         3.0\n114          5.7         2.5\n115          5.8         2.8\n116          6.4         3.2\n117          6.5         3.0\n118          7.7         3.8\n119          7.7         2.6\n120          6.0         2.2\n121          6.9         3.2\n122          5.6         2.8\n123          7.7         2.8\n124          6.3         2.7\n125          6.7         3.3\n126          7.2         3.2\n127          6.2         2.8\n128          6.1         3.0\n129          6.4         2.8\n130          7.2         3.0\n131          7.4         2.8\n132          7.9         3.8\n133          6.4         2.8\n134          6.3         2.8\n135          6.1         2.6\n136          7.7         3.0\n137          6.3         3.4\n138          6.4         3.1\n139          6.0         3.0\n140          6.9         3.1\n141          6.7         3.1\n142          6.9         3.1\n143          5.8         2.7\n144          6.8         3.2\n145          6.7         3.3\n146          6.7         3.0\n147          6.3         2.5\n148          6.5         3.0\n149          6.2         3.4\n150          5.9         3.0\n\niris[,c(1,3,5)]                    # 1,3,5열의 모든 데이터  \n\n    Sepal.Length Petal.Length    Species\n1            5.1          1.4     setosa\n2            4.9          1.4     setosa\n3            4.7          1.3     setosa\n4            4.6          1.5     setosa\n5            5.0          1.4     setosa\n6            5.4          1.7     setosa\n7            4.6          1.4     setosa\n8            5.0          1.5     setosa\n9            4.4          1.4     setosa\n10           4.9          1.5     setosa\n11           5.4          1.5     setosa\n12           4.8          1.6     setosa\n13           4.8          1.4     setosa\n14           4.3          1.1     setosa\n15           5.8          1.2     setosa\n16           5.7          1.5     setosa\n17           5.4          1.3     setosa\n18           5.1          1.4     setosa\n19           5.7          1.7     setosa\n20           5.1          1.5     setosa\n21           5.4          1.7     setosa\n22           5.1          1.5     setosa\n23           4.6          1.0     setosa\n24           5.1          1.7     setosa\n25           4.8          1.9     setosa\n26           5.0          1.6     setosa\n27           5.0          1.6     setosa\n28           5.2          1.5     setosa\n29           5.2          1.4     setosa\n30           4.7          1.6     setosa\n31           4.8          1.6     setosa\n32           5.4          1.5     setosa\n33           5.2          1.5     setosa\n34           5.5          1.4     setosa\n35           4.9          1.5     setosa\n36           5.0          1.2     setosa\n37           5.5          1.3     setosa\n38           4.9          1.4     setosa\n39           4.4          1.3     setosa\n40           5.1          1.5     setosa\n41           5.0          1.3     setosa\n42           4.5          1.3     setosa\n43           4.4          1.3     setosa\n44           5.0          1.6     setosa\n45           5.1          1.9     setosa\n46           4.8          1.4     setosa\n47           5.1          1.6     setosa\n48           4.6          1.4     setosa\n49           5.3          1.5     setosa\n50           5.0          1.4     setosa\n51           7.0          4.7 versicolor\n52           6.4          4.5 versicolor\n53           6.9          4.9 versicolor\n54           5.5          4.0 versicolor\n55           6.5          4.6 versicolor\n56           5.7          4.5 versicolor\n57           6.3          4.7 versicolor\n58           4.9          3.3 versicolor\n59           6.6          4.6 versicolor\n60           5.2          3.9 versicolor\n61           5.0          3.5 versicolor\n62           5.9          4.2 versicolor\n63           6.0          4.0 versicolor\n64           6.1          4.7 versicolor\n65           5.6          3.6 versicolor\n66           6.7          4.4 versicolor\n67           5.6          4.5 versicolor\n68           5.8          4.1 versicolor\n69           6.2          4.5 versicolor\n70           5.6          3.9 versicolor\n71           5.9          4.8 versicolor\n72           6.1          4.0 versicolor\n73           6.3          4.9 versicolor\n74           6.1          4.7 versicolor\n75           6.4          4.3 versicolor\n76           6.6          4.4 versicolor\n77           6.8          4.8 versicolor\n78           6.7          5.0 versicolor\n79           6.0          4.5 versicolor\n80           5.7          3.5 versicolor\n81           5.5          3.8 versicolor\n82           5.5          3.7 versicolor\n83           5.8          3.9 versicolor\n84           6.0          5.1 versicolor\n85           5.4          4.5 versicolor\n86           6.0          4.5 versicolor\n87           6.7          4.7 versicolor\n88           6.3          4.4 versicolor\n89           5.6          4.1 versicolor\n90           5.5          4.0 versicolor\n91           5.5          4.4 versicolor\n92           6.1          4.6 versicolor\n93           5.8          4.0 versicolor\n94           5.0          3.3 versicolor\n95           5.6          4.2 versicolor\n96           5.7          4.2 versicolor\n97           5.7          4.2 versicolor\n98           6.2          4.3 versicolor\n99           5.1          3.0 versicolor\n100          5.7          4.1 versicolor\n101          6.3          6.0  virginica\n102          5.8          5.1  virginica\n103          7.1          5.9  virginica\n104          6.3          5.6  virginica\n105          6.5          5.8  virginica\n106          7.6          6.6  virginica\n107          4.9          4.5  virginica\n108          7.3          6.3  virginica\n109          6.7          5.8  virginica\n110          7.2          6.1  virginica\n111          6.5          5.1  virginica\n112          6.4          5.3  virginica\n113          6.8          5.5  virginica\n114          5.7          5.0  virginica\n115          5.8          5.1  virginica\n116          6.4          5.3  virginica\n117          6.5          5.5  virginica\n118          7.7          6.7  virginica\n119          7.7          6.9  virginica\n120          6.0          5.0  virginica\n121          6.9          5.7  virginica\n122          5.6          4.9  virginica\n123          7.7          6.7  virginica\n124          6.3          4.9  virginica\n125          6.7          5.7  virginica\n126          7.2          6.0  virginica\n127          6.2          4.8  virginica\n128          6.1          4.9  virginica\n129          6.4          5.6  virginica\n130          7.2          5.8  virginica\n131          7.4          6.1  virginica\n132          7.9          6.4  virginica\n133          6.4          5.6  virginica\n134          6.3          5.1  virginica\n135          6.1          5.6  virginica\n136          7.7          6.1  virginica\n137          6.3          5.6  virginica\n138          6.4          5.5  virginica\n139          6.0          4.8  virginica\n140          6.9          5.4  virginica\n141          6.7          5.6  virginica\n142          6.9          5.1  virginica\n143          5.8          5.1  virginica\n144          6.8          5.9  virginica\n145          6.7          5.7  virginica\n146          6.7          5.2  virginica\n147          6.3          5.0  virginica\n148          6.5          5.2  virginica\n149          6.2          5.4  virginica\n150          5.9          5.1  virginica\n\niris[,c(\"Sepal.Length\", \"Species\")]# 1,5열의 모든 데이터\n\n    Sepal.Length    Species\n1            5.1     setosa\n2            4.9     setosa\n3            4.7     setosa\n4            4.6     setosa\n5            5.0     setosa\n6            5.4     setosa\n7            4.6     setosa\n8            5.0     setosa\n9            4.4     setosa\n10           4.9     setosa\n11           5.4     setosa\n12           4.8     setosa\n13           4.8     setosa\n14           4.3     setosa\n15           5.8     setosa\n16           5.7     setosa\n17           5.4     setosa\n18           5.1     setosa\n19           5.7     setosa\n20           5.1     setosa\n21           5.4     setosa\n22           5.1     setosa\n23           4.6     setosa\n24           5.1     setosa\n25           4.8     setosa\n26           5.0     setosa\n27           5.0     setosa\n28           5.2     setosa\n29           5.2     setosa\n30           4.7     setosa\n31           4.8     setosa\n32           5.4     setosa\n33           5.2     setosa\n34           5.5     setosa\n35           4.9     setosa\n36           5.0     setosa\n37           5.5     setosa\n38           4.9     setosa\n39           4.4     setosa\n40           5.1     setosa\n41           5.0     setosa\n42           4.5     setosa\n43           4.4     setosa\n44           5.0     setosa\n45           5.1     setosa\n46           4.8     setosa\n47           5.1     setosa\n48           4.6     setosa\n49           5.3     setosa\n50           5.0     setosa\n51           7.0 versicolor\n52           6.4 versicolor\n53           6.9 versicolor\n54           5.5 versicolor\n55           6.5 versicolor\n56           5.7 versicolor\n57           6.3 versicolor\n58           4.9 versicolor\n59           6.6 versicolor\n60           5.2 versicolor\n61           5.0 versicolor\n62           5.9 versicolor\n63           6.0 versicolor\n64           6.1 versicolor\n65           5.6 versicolor\n66           6.7 versicolor\n67           5.6 versicolor\n68           5.8 versicolor\n69           6.2 versicolor\n70           5.6 versicolor\n71           5.9 versicolor\n72           6.1 versicolor\n73           6.3 versicolor\n74           6.1 versicolor\n75           6.4 versicolor\n76           6.6 versicolor\n77           6.8 versicolor\n78           6.7 versicolor\n79           6.0 versicolor\n80           5.7 versicolor\n81           5.5 versicolor\n82           5.5 versicolor\n83           5.8 versicolor\n84           6.0 versicolor\n85           5.4 versicolor\n86           6.0 versicolor\n87           6.7 versicolor\n88           6.3 versicolor\n89           5.6 versicolor\n90           5.5 versicolor\n91           5.5 versicolor\n92           6.1 versicolor\n93           5.8 versicolor\n94           5.0 versicolor\n95           5.6 versicolor\n96           5.7 versicolor\n97           5.7 versicolor\n98           6.2 versicolor\n99           5.1 versicolor\n100          5.7 versicolor\n101          6.3  virginica\n102          5.8  virginica\n103          7.1  virginica\n104          6.3  virginica\n105          6.5  virginica\n106          7.6  virginica\n107          4.9  virginica\n108          7.3  virginica\n109          6.7  virginica\n110          7.2  virginica\n111          6.5  virginica\n112          6.4  virginica\n113          6.8  virginica\n114          5.7  virginica\n115          5.8  virginica\n116          6.4  virginica\n117          6.5  virginica\n118          7.7  virginica\n119          7.7  virginica\n120          6.0  virginica\n121          6.9  virginica\n122          5.6  virginica\n123          7.7  virginica\n124          6.3  virginica\n125          6.7  virginica\n126          7.2  virginica\n127          6.2  virginica\n128          6.1  virginica\n129          6.4  virginica\n130          7.2  virginica\n131          7.4  virginica\n132          7.9  virginica\n133          6.4  virginica\n134          6.3  virginica\n135          6.1  virginica\n136          7.7  virginica\n137          6.3  virginica\n138          6.4  virginica\n139          6.0  virginica\n140          6.9  virginica\n141          6.7  virginica\n142          6.9  virginica\n143          5.8  virginica\n144          6.8  virginica\n145          6.7  virginica\n146          6.7  virginica\n147          6.3  virginica\n148          6.5  virginica\n149          6.2  virginica\n150          5.9  virginica\n\niris[1:5,]                         # 1~5행의 도든 데이터\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n\niris[1:5,c(1,3)]                   # 1~5행의 데이터 중 1,3열의 데이터\n\n  Sepal.Length Petal.Length\n1          5.1          1.4\n2          4.9          1.4\n3          4.7          1.3\n4          4.6          1.5\n5          5.0          1.4\n\niris[,-5]                          # 5열을 제외한 모든 데이터\n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width\n1            5.1         3.5          1.4         0.2\n2            4.9         3.0          1.4         0.2\n3            4.7         3.2          1.3         0.2\n4            4.6         3.1          1.5         0.2\n5            5.0         3.6          1.4         0.2\n6            5.4         3.9          1.7         0.4\n7            4.6         3.4          1.4         0.3\n8            5.0         3.4          1.5         0.2\n9            4.4         2.9          1.4         0.2\n10           4.9         3.1          1.5         0.1\n11           5.4         3.7          1.5         0.2\n12           4.8         3.4          1.6         0.2\n13           4.8         3.0          1.4         0.1\n14           4.3         3.0          1.1         0.1\n15           5.8         4.0          1.2         0.2\n16           5.7         4.4          1.5         0.4\n17           5.4         3.9          1.3         0.4\n18           5.1         3.5          1.4         0.3\n19           5.7         3.8          1.7         0.3\n20           5.1         3.8          1.5         0.3\n21           5.4         3.4          1.7         0.2\n22           5.1         3.7          1.5         0.4\n23           4.6         3.6          1.0         0.2\n24           5.1         3.3          1.7         0.5\n25           4.8         3.4          1.9         0.2\n26           5.0         3.0          1.6         0.2\n27           5.0         3.4          1.6         0.4\n28           5.2         3.5          1.5         0.2\n29           5.2         3.4          1.4         0.2\n30           4.7         3.2          1.6         0.2\n31           4.8         3.1          1.6         0.2\n32           5.4         3.4          1.5         0.4\n33           5.2         4.1          1.5         0.1\n34           5.5         4.2          1.4         0.2\n35           4.9         3.1          1.5         0.2\n36           5.0         3.2          1.2         0.2\n37           5.5         3.5          1.3         0.2\n38           4.9         3.6          1.4         0.1\n39           4.4         3.0          1.3         0.2\n40           5.1         3.4          1.5         0.2\n41           5.0         3.5          1.3         0.3\n42           4.5         2.3          1.3         0.3\n43           4.4         3.2          1.3         0.2\n44           5.0         3.5          1.6         0.6\n45           5.1         3.8          1.9         0.4\n46           4.8         3.0          1.4         0.3\n47           5.1         3.8          1.6         0.2\n48           4.6         3.2          1.4         0.2\n49           5.3         3.7          1.5         0.2\n50           5.0         3.3          1.4         0.2\n51           7.0         3.2          4.7         1.4\n52           6.4         3.2          4.5         1.5\n53           6.9         3.1          4.9         1.5\n54           5.5         2.3          4.0         1.3\n55           6.5         2.8          4.6         1.5\n56           5.7         2.8          4.5         1.3\n57           6.3         3.3          4.7         1.6\n58           4.9         2.4          3.3         1.0\n59           6.6         2.9          4.6         1.3\n60           5.2         2.7          3.9         1.4\n61           5.0         2.0          3.5         1.0\n62           5.9         3.0          4.2         1.5\n63           6.0         2.2          4.0         1.0\n64           6.1         2.9          4.7         1.4\n65           5.6         2.9          3.6         1.3\n66           6.7         3.1          4.4         1.4\n67           5.6         3.0          4.5         1.5\n68           5.8         2.7          4.1         1.0\n69           6.2         2.2          4.5         1.5\n70           5.6         2.5          3.9         1.1\n71           5.9         3.2          4.8         1.8\n72           6.1         2.8          4.0         1.3\n73           6.3         2.5          4.9         1.5\n74           6.1         2.8          4.7         1.2\n75           6.4         2.9          4.3         1.3\n76           6.6         3.0          4.4         1.4\n77           6.8         2.8          4.8         1.4\n78           6.7         3.0          5.0         1.7\n79           6.0         2.9          4.5         1.5\n80           5.7         2.6          3.5         1.0\n81           5.5         2.4          3.8         1.1\n82           5.5         2.4          3.7         1.0\n83           5.8         2.7          3.9         1.2\n84           6.0         2.7          5.1         1.6\n85           5.4         3.0          4.5         1.5\n86           6.0         3.4          4.5         1.6\n87           6.7         3.1          4.7         1.5\n88           6.3         2.3          4.4         1.3\n89           5.6         3.0          4.1         1.3\n90           5.5         2.5          4.0         1.3\n91           5.5         2.6          4.4         1.2\n92           6.1         3.0          4.6         1.4\n93           5.8         2.6          4.0         1.2\n94           5.0         2.3          3.3         1.0\n95           5.6         2.7          4.2         1.3\n96           5.7         3.0          4.2         1.2\n97           5.7         2.9          4.2         1.3\n98           6.2         2.9          4.3         1.3\n99           5.1         2.5          3.0         1.1\n100          5.7         2.8          4.1         1.3\n101          6.3         3.3          6.0         2.5\n102          5.8         2.7          5.1         1.9\n103          7.1         3.0          5.9         2.1\n104          6.3         2.9          5.6         1.8\n105          6.5         3.0          5.8         2.2\n106          7.6         3.0          6.6         2.1\n107          4.9         2.5          4.5         1.7\n108          7.3         2.9          6.3         1.8\n109          6.7         2.5          5.8         1.8\n110          7.2         3.6          6.1         2.5\n111          6.5         3.2          5.1         2.0\n112          6.4         2.7          5.3         1.9\n113          6.8         3.0          5.5         2.1\n114          5.7         2.5          5.0         2.0\n115          5.8         2.8          5.1         2.4\n116          6.4         3.2          5.3         2.3\n117          6.5         3.0          5.5         1.8\n118          7.7         3.8          6.7         2.2\n119          7.7         2.6          6.9         2.3\n120          6.0         2.2          5.0         1.5\n121          6.9         3.2          5.7         2.3\n122          5.6         2.8          4.9         2.0\n123          7.7         2.8          6.7         2.0\n124          6.3         2.7          4.9         1.8\n125          6.7         3.3          5.7         2.1\n126          7.2         3.2          6.0         1.8\n127          6.2         2.8          4.8         1.8\n128          6.1         3.0          4.9         1.8\n129          6.4         2.8          5.6         2.1\n130          7.2         3.0          5.8         1.6\n131          7.4         2.8          6.1         1.9\n132          7.9         3.8          6.4         2.0\n133          6.4         2.8          5.6         2.2\n134          6.3         2.8          5.1         1.5\n135          6.1         2.6          5.6         1.4\n136          7.7         3.0          6.1         2.3\n137          6.3         3.4          5.6         2.4\n138          6.4         3.1          5.5         1.8\n139          6.0         3.0          4.8         1.8\n140          6.9         3.1          5.4         2.1\n141          6.7         3.1          5.6         2.4\n142          6.9         3.1          5.1         2.3\n143          5.8         2.7          5.1         1.9\n144          6.8         3.2          5.9         2.3\n145          6.7         3.3          5.7         2.5\n146          6.7         3.0          5.2         2.3\n147          6.3         2.5          5.0         1.9\n148          6.5         3.0          5.2         2.0\n149          6.2         3.4          5.4         2.3\n150          5.9         3.0          5.1         1.8\n\n\n\n\n데이터프레임의 열 추출\niris[열번호]함수는 열을 추출한다 (데이터프레임 형식으로 추출됨)\n\niris[5] = iris[\"Species\"]\n\niris$열이름함수는 열 속 값을 추출한다 (벡터나, 팩터 형식으로 추출됨, iris[,열번호]와 동일)\n\niris[,5] = iris[,\"Species\"] = iris$Species\n\n\nclass(iris[5])\n\n[1] \"data.frame\"\n\niris[5]     \n\n       Species\n1       setosa\n2       setosa\n3       setosa\n4       setosa\n5       setosa\n6       setosa\n7       setosa\n8       setosa\n9       setosa\n10      setosa\n11      setosa\n12      setosa\n13      setosa\n14      setosa\n15      setosa\n16      setosa\n17      setosa\n18      setosa\n19      setosa\n20      setosa\n21      setosa\n22      setosa\n23      setosa\n24      setosa\n25      setosa\n26      setosa\n27      setosa\n28      setosa\n29      setosa\n30      setosa\n31      setosa\n32      setosa\n33      setosa\n34      setosa\n35      setosa\n36      setosa\n37      setosa\n38      setosa\n39      setosa\n40      setosa\n41      setosa\n42      setosa\n43      setosa\n44      setosa\n45      setosa\n46      setosa\n47      setosa\n48      setosa\n49      setosa\n50      setosa\n51  versicolor\n52  versicolor\n53  versicolor\n54  versicolor\n55  versicolor\n56  versicolor\n57  versicolor\n58  versicolor\n59  versicolor\n60  versicolor\n61  versicolor\n62  versicolor\n63  versicolor\n64  versicolor\n65  versicolor\n66  versicolor\n67  versicolor\n68  versicolor\n69  versicolor\n70  versicolor\n71  versicolor\n72  versicolor\n73  versicolor\n74  versicolor\n75  versicolor\n76  versicolor\n77  versicolor\n78  versicolor\n79  versicolor\n80  versicolor\n81  versicolor\n82  versicolor\n83  versicolor\n84  versicolor\n85  versicolor\n86  versicolor\n87  versicolor\n88  versicolor\n89  versicolor\n90  versicolor\n91  versicolor\n92  versicolor\n93  versicolor\n94  versicolor\n95  versicolor\n96  versicolor\n97  versicolor\n98  versicolor\n99  versicolor\n100 versicolor\n101  virginica\n102  virginica\n103  virginica\n104  virginica\n105  virginica\n106  virginica\n107  virginica\n108  virginica\n109  virginica\n110  virginica\n111  virginica\n112  virginica\n113  virginica\n114  virginica\n115  virginica\n116  virginica\n117  virginica\n118  virginica\n119  virginica\n120  virginica\n121  virginica\n122  virginica\n123  virginica\n124  virginica\n125  virginica\n126  virginica\n127  virginica\n128  virginica\n129  virginica\n130  virginica\n131  virginica\n132  virginica\n133  virginica\n134  virginica\n135  virginica\n136  virginica\n137  virginica\n138  virginica\n139  virginica\n140  virginica\n141  virginica\n142  virginica\n143  virginica\n144  virginica\n145  virginica\n146  virginica\n147  virginica\n148  virginica\n149  virginica\n150  virginica\n\nclass(iris$Species)\n\n[1] \"factor\"\n\niris$Species\n\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica\n\n\nunique()함수는 중복이 제거된 데이터의 값을 출력한다\n\nunique(iris[,5])    # 품종의 종류 보기(중복 제거)\n\n[1] setosa     versicolor virginica \nLevels: setosa versicolor virginica\n\n\ntable()함수는 팩터의 정보와, 각 팩터당 수를 출력한다.\n\ntable(iris[,\"Species\"])   # 품종의 종류별 행의 개수 세기\n\n\n    setosa versicolor  virginica \n        50         50         50 \n\n\n\n\n데이터프레임 기초통계량\nsummary()함수는 각 열의 기초통계량(num), table값(factor)을 출력한다.\n\ncolSums(iris[,-5])  # 열별 합계\n\nSepal.Length  Sepal.Width Petal.Length  Petal.Width \n       876.5        458.6        563.7        179.9 \n\ncolMeans(iris[,-5]) # 열별 평균\n\nSepal.Length  Sepal.Width Petal.Length  Petal.Width \n    5.843333     3.057333     3.758000     1.199333 \n\nrowSums(iris[,-5])  # 행별 합계\n\n  [1] 10.2  9.5  9.4  9.4 10.2 11.4  9.7 10.1  8.9  9.6 10.8 10.0  9.3  8.5 11.2\n [16] 12.0 11.0 10.3 11.5 10.7 10.7 10.7  9.4 10.6 10.3  9.8 10.4 10.4 10.2  9.7\n [31]  9.7 10.7 10.9 11.3  9.7  9.6 10.5 10.0  8.9 10.2 10.1  8.4  9.1 10.7 11.2\n [46]  9.5 10.7  9.4 10.7  9.9 16.3 15.6 16.4 13.1 15.4 14.3 15.9 11.6 15.4 13.2\n [61] 11.5 14.6 13.2 15.1 13.4 15.6 14.6 13.6 14.4 13.1 15.7 14.2 15.2 14.8 14.9\n [76] 15.4 15.8 16.4 14.9 12.8 12.8 12.6 13.6 15.4 14.4 15.5 16.0 14.3 14.0 13.3\n [91] 13.7 15.1 13.6 11.6 13.8 14.1 14.1 14.7 11.7 13.9 18.1 15.5 18.1 16.6 17.5\n[106] 19.3 13.6 18.3 16.8 19.4 16.8 16.3 17.4 15.2 16.1 17.2 16.8 20.4 19.5 14.7\n[121] 18.1 15.3 19.2 15.7 17.8 18.2 15.6 15.8 16.9 17.6 18.2 20.1 17.0 15.7 15.7\n[136] 19.1 17.7 16.8 15.6 17.5 17.8 17.4 15.5 18.2 18.2 17.2 15.7 16.7 17.3 15.8\n\nrowMeans(iris[,-5]) # 행별 평균\n\n  [1] 2.550 2.375 2.350 2.350 2.550 2.850 2.425 2.525 2.225 2.400 2.700 2.500\n [13] 2.325 2.125 2.800 3.000 2.750 2.575 2.875 2.675 2.675 2.675 2.350 2.650\n [25] 2.575 2.450 2.600 2.600 2.550 2.425 2.425 2.675 2.725 2.825 2.425 2.400\n [37] 2.625 2.500 2.225 2.550 2.525 2.100 2.275 2.675 2.800 2.375 2.675 2.350\n [49] 2.675 2.475 4.075 3.900 4.100 3.275 3.850 3.575 3.975 2.900 3.850 3.300\n [61] 2.875 3.650 3.300 3.775 3.350 3.900 3.650 3.400 3.600 3.275 3.925 3.550\n [73] 3.800 3.700 3.725 3.850 3.950 4.100 3.725 3.200 3.200 3.150 3.400 3.850\n [85] 3.600 3.875 4.000 3.575 3.500 3.325 3.425 3.775 3.400 2.900 3.450 3.525\n [97] 3.525 3.675 2.925 3.475 4.525 3.875 4.525 4.150 4.375 4.825 3.400 4.575\n[109] 4.200 4.850 4.200 4.075 4.350 3.800 4.025 4.300 4.200 5.100 4.875 3.675\n[121] 4.525 3.825 4.800 3.925 4.450 4.550 3.900 3.950 4.225 4.400 4.550 5.025\n[133] 4.250 3.925 3.925 4.775 4.425 4.200 3.900 4.375 4.450 4.350 3.875 4.550\n[145] 4.550 4.300 3.925 4.175 4.325 3.950\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50"
  },
  {
    "objectID": "posts/1017_pt3.html#subset-원하는-조건의-데이터-추출",
    "href": "posts/1017_pt3.html#subset-원하는-조건의-데이터-추출",
    "title": "PT.3 - 데이터프레임, subset, 행렬의 연산",
    "section": "subset, 원하는 조건의 데이터 추출",
    "text": "subset, 원하는 조건의 데이터 추출\nsubset(데이터, 조건)함수는 데이터 속에서 조건에 해당하는 데이터만을 추출한다\n\nsubset(iris, Species==\"setosa\") #Species가 \"setosa\"인 녀석들만 출력\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n13          4.8         3.0          1.4         0.1  setosa\n14          4.3         3.0          1.1         0.1  setosa\n15          5.8         4.0          1.2         0.2  setosa\n16          5.7         4.4          1.5         0.4  setosa\n17          5.4         3.9          1.3         0.4  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n22          5.1         3.7          1.5         0.4  setosa\n23          4.6         3.6          1.0         0.2  setosa\n24          5.1         3.3          1.7         0.5  setosa\n25          4.8         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n27          5.0         3.4          1.6         0.4  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n32          5.4         3.4          1.5         0.4  setosa\n33          5.2         4.1          1.5         0.1  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n38          4.9         3.6          1.4         0.1  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n44          5.0         3.5          1.6         0.6  setosa\n45          5.1         3.8          1.9         0.4  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4         0.2  setosa\n\n\n\n인덱싱을 통해서 추출하는 방법도 있음\n\niris$Species==\"setosa\"\n\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [49]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[109] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[145] FALSE FALSE FALSE FALSE FALSE FALSE\n\niris[iris$Species==\"setosa\",]\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n13          4.8         3.0          1.4         0.1  setosa\n14          4.3         3.0          1.1         0.1  setosa\n15          5.8         4.0          1.2         0.2  setosa\n16          5.7         4.4          1.5         0.4  setosa\n17          5.4         3.9          1.3         0.4  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n22          5.1         3.7          1.5         0.4  setosa\n23          4.6         3.6          1.0         0.2  setosa\n24          5.1         3.3          1.7         0.5  setosa\n25          4.8         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n27          5.0         3.4          1.6         0.4  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n32          5.4         3.4          1.5         0.4  setosa\n33          5.2         4.1          1.5         0.1  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n38          4.9         3.6          1.4         0.1  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n44          5.0         3.5          1.6         0.6  setosa\n45          5.1         3.8          1.9         0.4  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4         0.2  setosa\n\n\n\n\n조건 연산자\n& : 두 조건을 모두 만족해야됨 (Sepal.Length가 5보다 크면서, Sepal.Width가 4보다 큰 조건)\n| : 두 조건중 하나만 만족하면됨 (엔터키 위 shift + )\n\nsubset(iris, Sepal.Length&gt;5.0 & Sepal.Width&gt;4.0)\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n16          5.7         4.4          1.5         0.4  setosa\n33          5.2         4.1          1.5         0.1  setosa\n34          5.5         4.2          1.4         0.2  setosa\n\n\n\n인덱싱을 통한 방법\n\n\niris[iris$Sepal.Length &gt; 5.0 & iris$Sepal.Width &gt; 4.0,]\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n16          5.7         4.4          1.5         0.4  setosa\n33          5.2         4.1          1.5         0.1  setosa\n34          5.5         4.2          1.4         0.2  setosa"
  },
  {
    "objectID": "posts/1017_pt3.html#행렬의-연산",
    "href": "posts/1017_pt3.html#행렬의-연산",
    "title": "PT.3 - 데이터프레임, subset, 행렬의 연산",
    "section": "행렬의 연산",
    "text": "행렬의 연산\na = 1:20의 4행 5열 행렬\nb = 21:40의 4행 5열 행렬\n\na &lt;- matrix(1:20,4,5)\na\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\nb &lt;- matrix(21:40,4,5)\nb\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21   25   29   33   37\n[2,]   22   26   30   34   38\n[3,]   23   27   31   35   39\n[4,]   24   28   32   36   40\n\n\n\n사칙연산\n\n각 값에서 연산\n\n\na + 5\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    6   10   14   18   22\n[2,]    7   11   15   19   23\n[3,]    8   12   16   20   24\n[4,]    9   13   17   21   25\n\na - 3\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   -2    2    6   10   14\n[2,]   -1    3    7   11   15\n[3,]    0    4    8   12   16\n[4,]    1    5    9   13   17\n\nb * 2\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   42   50   58   66   74\n[2,]   44   52   60   68   76\n[3,]   46   54   62   70   78\n[4,]   48   56   64   72   80\n\nb / 5\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]  4.2  5.0  5.8  6.6  7.4\n[2,]  4.4  5.2  6.0  6.8  7.6\n[3,]  4.6  5.4  6.2  7.0  7.8\n[4,]  4.8  5.6  6.4  7.2  8.0\n\n\n\n\n행렬간 연산\n- 두 행렬의 차원(행수, 열수)이 같아야 행렬간 연산 가능\n\n같은 위치의 값끼리 연산\n\n\na + b\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   22   30   38   46   54\n[2,]   24   32   40   48   56\n[3,]   26   34   42   50   58\n[4,]   28   36   44   52   60\n\nb - a\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   20   20   20   20   20\n[2,]   20   20   20   20   20\n[3,]   20   20   20   20   20\n[4,]   20   20   20   20   20\n\na * b\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21  125  261  429  629\n[2,]   44  156  300  476  684\n[3,]   69  189  341  525  741\n[4,]   96  224  384  576  800\n\nb / a\n\n          [,1]     [,2]     [,3]     [,4]     [,5]\n[1,] 21.000000 5.000000 3.222222 2.538462 2.176471\n[2,] 11.000000 4.333333 3.000000 2.428571 2.111111\n[3,]  7.666667 3.857143 2.818182 2.333333 2.052632\n[4,]  6.000000 3.500000 2.666667 2.250000 2.000000\n\n\n\n\n연산한 행렬을 다시 지정\n\na &lt;- a*3\nb &lt;- b-5"
  },
  {
    "objectID": "posts/1017_pt3.html#데이터의-구조",
    "href": "posts/1017_pt3.html#데이터의-구조",
    "title": "PT.3 - 데이터프레임, subset, 행렬의 연산",
    "section": "데이터의 구조",
    "text": "데이터의 구조\nstate.x77은 R 에서 기본제공하는 미국 주별 정보를 담고 있는 행렬 데이터셋이다.\n\nclass()\nclass()함수는 데이터의 자료구조를 확인하는 함수이다.\n\nclass(iris)               # iris 데이터셋의 자료구조 확인  \n\n[1] \"data.frame\"\n\nclass(state.x77)          # state.x77 데이터셋의 자료구조 확인 # \"matrix\"는 내용을 담고있는 행렬, \"array\"는 열 이름을 담고있음\n\n[1] \"matrix\" \"array\" \n\n\nis.matrix(),is.data.frame()함수는 데이터셋이 행렬(matrix)인지, 데이터프레임인지를 TRUE,FALSE값으로 출력하는 함수이다.\n\nis.matrix(iris)           # 데이터셋이 매트릭스인지를 확인하는 함수\n\n[1] FALSE\n\nis.data.frame(iris)       # 데이터셋이 데이터프레임인지를 확인하는 함수   \n\n[1] TRUE\n\nis.matrix(state.x77)\n\n[1] TRUE\n\nis.data.frame(state.x77)\n\n[1] FALSE\n\n\ndata.frame()함수를 통해 행렬을 데이터프레임으로 변환\n\nst &lt;- data.frame(state.x77)\nhead(st)\n\n           Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area\nAlabama          3615   3624        2.1    69.05   15.1    41.3    20  50708\nAlaska            365   6315        1.5    69.31   11.3    66.7   152 566432\nArizona          2212   4530        1.8    70.55    7.8    58.1    15 113417\nArkansas         2110   3378        1.9    70.66   10.1    39.9    65  51945\nCalifornia      21198   5114        1.1    71.71   10.3    62.6    20 156361\nColorado         2541   4884        0.7    72.06    6.8    63.9   166 103766\n\nclass(st)\n\n[1] \"data.frame\"\n\n\nas.matrix()를 통해 데이터프레임을 행렬로 변환\n\niris.m&lt;- as.matrix(iris[,-5])\nhead(iris.m)\n\n     Sepal.Length Sepal.Width Petal.Length Petal.Width\n[1,]          5.1         3.5          1.4         0.2\n[2,]          4.9         3.0          1.4         0.2\n[3,]          4.7         3.2          1.3         0.2\n[4,]          4.6         3.1          1.5         0.2\n[5,]          5.0         3.6          1.4         0.2\n[6,]          5.4         3.9          1.7         0.4\n\nclass(iris.m) # \"matrix\"는 내용을 담고있는 행렬, \"array\"는 열 이름을 담고있음\n\n[1] \"matrix\" \"array\" \n\n\nt()함수는 행렬의 행과 열을 바꾼다. (Transpose)\n\nz &lt;- matrix(1:20, nrow=4, ncol=5)\nz\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    5    9   13   17\n[2,]    2    6   10   14   18\n[3,]    3    7   11   15   19\n[4,]    4    8   12   16   20\n\nt(z)\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n[4,]   13   14   15   16\n[5,]   17   18   19   20"
  },
  {
    "objectID": "posts/1024_pt4.html",
    "href": "posts/1024_pt4.html",
    "title": "PT.4 - 데이터 불러오기, 저장하기",
    "section": "",
    "text": "airquality : R 기본 데이터셋\nairquality_data라는 변수명에 할당 후 저장하기\nwrite.csv()함수 사용 저장\nrow.names\n\nTRUE : 첫째 열(1,2,3,4…) 값을 포함해서 저장, X라는 열이 포함되는걸 볼 수 있음\n\n\nairquality_data &lt;- airquality\n\nwrite.csv(airquality_data, file = \"airquality_new.csv\")\n\n\n\n\n\n\nX\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n\n1\n41\n190\n7.4\n67\n5\n1\n\n\n2\n36\n118\n8.0\n72\n5\n2\n\n\n3\n12\n149\n12.6\n74\n5\n3\n\n\n4\n18\n313\n11.5\n62\n5\n4\n\n\n5\nNA\nNA\n14.3\n56\n5\n5\n\n\n6\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\nFALSE : 포함 안하고 저장\n\n\nwrite.csv(airquality_data, file = \"airquality_new.csv\", row.names = FALSE)\n\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6"
  },
  {
    "objectID": "posts/1024_pt4.html#데이터-저장",
    "href": "posts/1024_pt4.html#데이터-저장",
    "title": "PT.4 - 데이터 불러오기, 저장하기",
    "section": "",
    "text": "airquality : R 기본 데이터셋\nairquality_data라는 변수명에 할당 후 저장하기\nwrite.csv()함수 사용 저장\nrow.names\n\nTRUE : 첫째 열(1,2,3,4…) 값을 포함해서 저장, X라는 열이 포함되는걸 볼 수 있음\n\n\nairquality_data &lt;- airquality\n\nwrite.csv(airquality_data, file = \"airquality_new.csv\")\n\n\n\n\n\n\nX\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n\n1\n41\n190\n7.4\n67\n5\n1\n\n\n2\n36\n118\n8.0\n72\n5\n2\n\n\n3\n12\n149\n12.6\n74\n5\n3\n\n\n4\n18\n313\n11.5\n62\n5\n4\n\n\n5\nNA\nNA\n14.3\n56\n5\n5\n\n\n6\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\nFALSE : 포함 안하고 저장\n\n\nwrite.csv(airquality_data, file = \"airquality_new.csv\", row.names = FALSE)\n\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6"
  },
  {
    "objectID": "posts/1024_pt4.html#데이터-읽어오기",
    "href": "posts/1024_pt4.html#데이터-읽어오기",
    "title": "PT.3 - 데이터 불러오기, 저장하기",
    "section": "데이터 읽어오기",
    "text": "데이터 읽어오기\nread.csv()함수를 통해 읽어옴\n주요 인코딩\n\nutf-8\ncp949 (한글)\neuc-kr (한글)\n\n\nread.csv(\"경로\", fileEncoding = \"인코딩\")\n\n\ndata &lt;- read.csv(\"airquality_new.csv\")\n\nhead(data)\n\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6"
  },
  {
    "objectID": "posts/1024_pt4.html#데이터-불러오기",
    "href": "posts/1024_pt4.html#데이터-불러오기",
    "title": "PT.4 - 데이터 불러오기, 저장하기",
    "section": "데이터 불러오기",
    "text": "데이터 불러오기\nread.csv()함수를 통해 읽어옴\n데이터 불러오기가 안되면\n\n경로를 잘못 입력했거나\n/ \\ 슬래시의 방향이 반대거나\n인코딩을 바꾸어보면 된다.\n\n주요 인코딩\n\nutf-8\ncp949 (한글)\neuc-kr (한글)\n\n\nread.csv(\"경로\", fileEncoding = \"인코딩\")\n\n\ndata &lt;- read.csv(\"airquality_new.csv\")\n\nhead(data)\n\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6"
  },
  {
    "objectID": "posts/1031_midterm.html",
    "href": "posts/1031_midterm.html",
    "title": "PT.5 - 중간고사",
    "section": "",
    "text": "V1 &lt;- c(15,16,17,18,19,20,21,22,23,24,25)\nV1\n\n [1] 15 16 17 18 19 20 21 22 23 24 25"
  },
  {
    "objectID": "posts/1031_midterm.html#v1-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "href": "posts/1031_midterm.html#v1-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "title": "PT.5 - 중간고사",
    "section": "",
    "text": "V1 &lt;- c(15,16,17,18,19,20,21,22,23,24,25)\nV1\n\n [1] 15 16 17 18 19 20 21 22 23 24 25"
  },
  {
    "objectID": "posts/1031_midterm.html#위-번-문제에서-최대값을-얻기-위한-함수를-사용하여-최대값을-출력하세요",
    "href": "posts/1031_midterm.html#위-번-문제에서-최대값을-얻기-위한-함수를-사용하여-최대값을-출력하세요",
    "title": "PT.5 - 중간고사",
    "section": "2. (1) 위 번 문제에서 최대값을 얻기 위한 함수를 사용하여 최대값을 출력하세요",
    "text": "2. (1) 위 번 문제에서 최대값을 얻기 위한 함수를 사용하여 최대값을 출력하세요\n\nmax(V1)\n\n[1] 25"
  },
  {
    "objectID": "posts/1031_midterm.html#v2-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "href": "posts/1031_midterm.html#v2-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "title": "PT.5 - 중간고사",
    "section": "3. V2 변수 가 아래와 같은 값을 가지기 위한 R CODE를 입력하세요",
    "text": "3. V2 변수 가 아래와 같은 값을 가지기 위한 R CODE를 입력하세요\n\n반드시 일정한 간격의 숫자를 생성하는 함수를 활용하세요\n\n\nV2 &lt;- seq(1,148,3)\n\nV2\n\n [1]   1   4   7  10  13  16  19  22  25  28  31  34  37  40  43  46  49  52  55\n[20]  58  61  64  67  70  73  76  79  82  85  88  91  94  97 100 103 106 109 112\n[39] 115 118 121 124 127 130 133 136 139 142 145 148"
  },
  {
    "objectID": "posts/1031_midterm.html#v3-변수-가-위와-같은-값을-가지기-위한-r-code를-입력하세요",
    "href": "posts/1031_midterm.html#v3-변수-가-위와-같은-값을-가지기-위한-r-code를-입력하세요",
    "title": "PT.5 - 중간고사",
    "section": "4. V3 변수 가 위와 같은 값을 가지기 위한 R CODE를 입력하세요",
    "text": "4. V3 변수 가 위와 같은 값을 가지기 위한 R CODE를 입력하세요\n\n반드시 반복된 숫자를 생성하는 함수를 활용하세요\n\n\nV3 &lt;- rep(seq(1,13,3),3)\nV3\n\n [1]  1  4  7 10 13  1  4  7 10 13  1  4  7 10 13"
  },
  {
    "objectID": "posts/1031_midterm.html#v4-v4-가-아래와-같을-때-의-7-15-번째-값을-로-변경하려고-합니다-해당-r코드를-작성하세요",
    "href": "posts/1031_midterm.html#v4-v4-가-아래와-같을-때-의-7-15-번째-값을-로-변경하려고-합니다-해당-r코드를-작성하세요",
    "title": "PT.5 - 중간고사",
    "section": "5. V4 V4 가 아래와 같을 때 의 7 15 번째 값을 로 변경하려고 합니다 해당 R코드를 작성하세요",
    "text": "5. V4 V4 가 아래와 같을 때 의 7 15 번째 값을 로 변경하려고 합니다 해당 R코드를 작성하세요\n\nV4 &lt;- c(1,5,15,7,8,9,13,22,3,5,7)\nV4[7] &lt;- 15\nV4\n\n [1]  1  5 15  7  8  9 15 22  3  5  7"
  },
  {
    "objectID": "posts/1031_midterm.html#v5-아래와-같이-변수-의-값을-생성하고-주어진-문제를-풀어보세요-반드시-코드를-활용해서-답을-찾으세요",
    "href": "posts/1031_midterm.html#v5-아래와-같이-변수-의-값을-생성하고-주어진-문제를-풀어보세요-반드시-코드를-활용해서-답을-찾으세요",
    "title": "PT.5 - 중간고사",
    "section": "6. V5 아래와 같이 변수 의 값을 생성하고 주어진 문제를 풀어보세요 반드시 코드를 활용해서 답을 찾으세요",
    "text": "6. V5 아래와 같이 변수 의 값을 생성하고 주어진 문제를 풀어보세요 반드시 코드를 활용해서 답을 찾으세요\n\na) V5 변수 를 생성하세요\n\nV5 &lt;- seq(1,100)\nV5\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n\n\n\nb) V5 변수 가 가지는 모든 값들의 합을 계산하세요\n\nsum(V5)\n\n[1] 5050\n\n\n\n\nc) V5 변수 의 평균값을 계산하세요\n\nmean(V5)\n\n[1] 50.5\n\n\n\n\nd) V5 변수 의 중간값을 계산하세요\n\nmedian(V5)\n\n[1] 50.5\n\n\n\n\ne) V5 변수 의 표준편차를 계산하세요\n\nsd(V5)\n\n[1] 29.01149\n\n\n\n\nf) V5 변수 의 값들의 범위를 산출하세요 (최소값, 최대값)\n\nrange(V5)\n\n[1]   1 100\n\n\n\n\ng) V5변수에서 62보다 큰 수를 모두 출력하세요\n\nV5[V5&gt;62]\n\n [1]  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81\n[20]  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100\n\n\n\n\nh) V5변수에서 62보다 크고 87보다 작은 수를 모두 출력하여 합을 계산하세요\n\nsum(V5[V5&gt;62 & V5&lt;87])\n\n[1] 1788\n\n\n\n\ni) V5변수에서 8의 배수들의 값을 NA( ) 결측값 으로 변경하세요\n\nV5[V5 %% 8 == 0] &lt;- NA\n\n\n\nj) (i) NA 에서 생성한 를 제외한 V5의 평균값을 계산하세요\n\nmean(V5, na.rm = TRUE)\n\n[1] 50.29545"
  },
  {
    "objectID": "posts/1031_midterm.html#r을-이용하여-각-문제를-수행하기-위한-코드를-작성하시오",
    "href": "posts/1031_midterm.html#r을-이용하여-각-문제를-수행하기-위한-코드를-작성하시오",
    "title": "PT.5 - 중간고사",
    "section": "7. R을 이용하여 각 문제를 수행하기 위한 코드를 작성하시오",
    "text": "7. R을 이용하여 각 문제를 수행하기 위한 코드를 작성하시오\n\na) 아래와 같은 매트릭스 V6 를 생성하세요 (열이름 행이름 동일해야합니다)\n\nV6 &lt;- matrix(\n  c(91,40,52,\n    45,85,65,\n    85,87,90,\n    88,52,76),\n  nrow = 3)\n\nrownames(V6) &lt;- c(\"Minju\",\"Jiho\",\"Yongho\")\ncolnames(V6) &lt;- c(\"Kor\",\"Eng\",\"Math\",\"Sci\")\n\nV6\n\n       Kor Eng Math Sci\nMinju   91  45   85  88\nJiho    40  85   87  52\nYongho  52  65   90  76\n\n\n\n\nb) 2행에 있는 모든 값을 출력하세요\n\nV6[2,]\n\n Kor  Eng Math  Sci \n  40   85   87   52 \n\n\n\n\nc) 3열의 모든 값을 출력하세요\n\nV6[,3]\n\n Minju   Jiho Yongho \n    85     87     90 \n\n\n\n\nd) 3 3 행 열의 값을 출력하세요\n\nV6[3,3]\n\n[1] 90\n\n\n\n\ne) Jiho Math 의 점수가 잘못 채점 되어 95점으로 변경되었습니다 매트릭스 . V6 Jiho 에서의 수학 성적을 95점으로 변경하세요\n\nV6[\"Jiho\",\"Math\"] &lt;- 95\nV6\n\n       Kor Eng Math Sci\nMinju   91  45   85  88\nJiho    40  85   95  52\nYongho  52  65   90  76\n\n\n\n\nf) (e) V6 에서 수정된 를 바탕으로 Minju, Jiho, Yongho의 성적의 평균값을 계산한 뒤, 아래와 같이 새로운 열을 추가하세요\n\nV6 &lt;- cbind(V6,rowMeans(V6))\ncolnames(V6) &lt;- c(\"Kor\",\"Eng\",\"Math\",\"Sci\",\"Mean\")\n\nV6\n\n       Kor Eng Math Sci  Mean\nMinju   91  45   85  88 77.25\nJiho    40  85   95  52 68.00\nYongho  52  65   90  76 70.75"
  },
  {
    "objectID": "posts/1031_midterm.html#travel_plan.csv-파일명-제리-스티븐슨-은-jerry-stevenson-여행사의-매니저이다.",
    "href": "posts/1031_midterm.html#travel_plan.csv-파일명-제리-스티븐슨-은-jerry-stevenson-여행사의-매니저이다.",
    "title": "PT.5 - 중간고사",
    "section": "8. ( : Travel_Plan.csv) 파일명 제리 스티븐슨 은 (Jerry Stevenson) 여행사의 매니저이다.",
    "text": "8. ( : Travel_Plan.csv) 파일명 제리 스티븐슨 은 (Jerry Stevenson) 여행사의 매니저이다.\n그는 고객이 내년 안에 여행할 것인지 여부를 예측할 수 있는 모형을 구축하고자 한다 그는 . 다음과 같은 변수를 포함하는 데이터셋을 수집했다 :\n\n대학학위를 가지고 있는지 (College)\n신용카드를 가지고 있는지 (Credit-Card)\n음식에 대한 연간 가계지출 달러 (FoodSpend)\n연소득 달러 고객이 (Income)\n내년 안에 여행할 계획이 있는지 여행계획 (TravelPlan : 1 = 있음, 0 = 없음)\n\n데이터의 일부를 아래 표에 보여준다\n\na) Travel_Plan.csv R 파일 를 로 불러와서 변수 df 로 저장하세요\n\ndf &lt;- read.csv(\"Travel_Plan.csv\")\n\n\n\nb) df 변수 의 속성을 확인하세요. 불러온 데이터는 어떤 형테의 자료인가요 매트릭스인가요, 데이터프레임 인가요\n(반드시 속성을 확인하는 함수 사용하세요)\n\nis.matrix(df)\nis.data.frame(df)\n\n\n\nc) 50,000 연소득이 달러 이상인 사람은 몇 명인가요 점\n\nnrow(subset(df,Income &gt; 50000))\n\n\n\nd) (Credit-Card) 신용카드 가 있는 사람 중에 연소득이 60,000 달러 이상인 사람은 몇명인가요\n\nnrow(subset(df,CreditCard == \"Yes\" & Income &gt; 60000))\n\n\n\ne) 여행계획이 있는 사람들의(TravelPlan : 1) 연소득 평균값과 여행 계획이 없는 사람들의(TravelPlan : 0) 연소득 평균값을 계산한 다음 비교하세요\n여행계획이 있는 사람의 연소득 평균값이 얼마 더 높은가요\n\nmean(subset(df,TravelPlan == 1)$Income)\nmean(subset(df,TravelPlan == 0)$Income)\n\n\n\nf) (Income)연소득을 기준으로 내림차순으로 정렬한 다음 연소득 상위 100명의 데이터를추출하세요\n(변수명 : df_100 ) 추출된 데이터를 Travel_Plan_100.csv 이름으로 저장하세요\n\ndf_100 &lt;- head(df[order(df$Income, decreasing = TRUE),])\n\nwrite.csv(df_100, \"df_100.csv\")"
  },
  {
    "objectID": "posts/1107_.html",
    "href": "posts/1107_.html",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1107_.html#조건문",
    "href": "posts/1107_.html#조건문",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1107_.html#ifelse",
    "href": "posts/1107_.html#ifelse",
    "title": "PT.6 - 조건문",
    "section": "ifelse()",
    "text": "ifelse()\nifelse(조건식, 참인 경우 실행할 코드, 거짓일 경우 실행할 코드)\n\nx &lt;- -10\nifelse(x&gt;0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"음수입니다.\"\n\nx &lt;- c(10, -5, 0)\nifelse(x &gt; 0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"양수입니다.\" \"음수입니다.\" \"음수입니다.\"\n\n\n\n계단식 ifelse()도 가능\n\nx &lt;- c(65,55,95,40,85,75,77)\nifelse(x&gt;=80, \"A\", \n       ifelse(x&gt;=60, \"B\", \n              ifelse(x&gt;=40, \"C\", \"F\")))\n\n[1] \"B\" \"C\" \"A\" \"C\" \"A\" \"B\" \"B\""
  },
  {
    "objectID": "posts/1107_.html#문제",
    "href": "posts/1107_.html#문제",
    "title": "PT.6 - 조건문",
    "section": "문제",
    "text": "문제\n빅데이터응용학과에 10명의 학생이 중간고사 시험을 봤습니다. 10명의 성적은 아래와 같습니다.\n45,55,65,75,86,74,67,98,50,66\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\n\n\n1) 중간고사 평균 성적을 계산하세요.\n\nmean(mid_exam)\n\n[1] 68.1\n\n\n\n\n2) 중간고사 중간값을 찾으세요.\n\nmedian(mid_exam)\n\n[1] 66.5\n\n\n\n\n3) 중간고사 최고 성적은 몇점인가요.\n\nmax(mid_exam)\n\n[1] 98\n\n\n\n\n4) 중간고사 성적을 분류하시오\n\n90점 이상은 A학점\n80점 이상은 B학점\n70점 이상은 C학점\n60점 이상은 D학점\n나머지는 F학점\n\n해당 문제를 Code를 활용하여 풀어보세요.(ifelse문 활용)\n\nifelse(mid_exam &gt;= 90, \"A\", \n       ifelse(mid_exam &gt;= 80, \"B\",\n              ifelse(mid_exam &gt;= 70, \"C\", \n                     ifelse(mid_exam &gt;= 60, \"D\",\"F\"))))\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\"\n\n\n\n반복문을 사용해서 하는 방법 (비추, ifelse()함수 쓰셈)\n\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\na &lt;- character(length(mid_exam))\n\nfor (i in 1:length(mid_exam)) {\n  if (mid_exam[i] &gt;= 90) {\n    a[i] &lt;- \"A\"\n  } else if (mid_exam[i] &gt;= 80 & mid_exam[i] &lt; 90) {\n    a[i] &lt;- \"B\"\n  } else if (mid_exam[i] &gt;= 70 & mid_exam[i] &lt; 80) {\n    a[i] &lt;- \"C\"\n  } else if (mid_exam[i] &gt;= 60 & mid_exam[i] &lt; 70) {\n    a[i] &lt;- \"D\"\n  } else {\n    a[i] &lt;- \"F\"\n  }\n}\n\na\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\""
  },
  {
    "objectID": "posts/1128.html",
    "href": "posts/1128.html",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "which(iris[,1:4]&gt;5.0)\n\n  [1]   1   6  11  15  16  17  18  19  20  21  22  24  28  29  32  33  34  37\n [19]  40  45  47  49  51  52  53  54  55  56  57  59  60  62  63  64  65  66\n [37]  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84\n [55]  85  86  87  88  89  90  91  92  93  95  96  97  98  99 100 101 102 103\n [73] 104 105 106 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122\n [91] 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140\n[109] 141 142 143 144 145 146 147 148 149 150 384 401 402 403 404 405 406 408\n[127] 409 410 411 412 413 415 416 417 418 419 421 423 425 426 429 430 431 432\n[145] 433 434 435 436 437 438 440 441 442 443 444 445 446 448 449 450\nidx &lt;- which(iris[,1:4]&gt;5.0,arr.ind=TRUE)\nidx[,1]\n\n  [1]   1   6  11  15  16  17  18  19  20  21  22  24  28  29  32  33  34  37\n [19]  40  45  47  49  51  52  53  54  55  56  57  59  60  62  63  64  65  66\n [37]  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84\n [55]  85  86  87  88  89  90  91  92  93  95  96  97  98  99 100 101 102 103\n [73] 104 105 106 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122\n [91] 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140\n[109] 141 142 143 144 145 146 147 148 149 150  84 101 102 103 104 105 106 108\n[127] 109 110 111 112 113 115 116 117 118 119 121 123 125 126 129 130 131 132\n[145] 133 134 135 136 137 138 140 141 142 143 144 145 146 148 149 150\n#하단 내용 할줄 알아야함!\niris[idx[,1],]\n\n      Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1              5.1         3.5          1.4         0.2     setosa\n6              5.4         3.9          1.7         0.4     setosa\n11             5.4         3.7          1.5         0.2     setosa\n15             5.8         4.0          1.2         0.2     setosa\n16             5.7         4.4          1.5         0.4     setosa\n17             5.4         3.9          1.3         0.4     setosa\n18             5.1         3.5          1.4         0.3     setosa\n19             5.7         3.8          1.7         0.3     setosa\n20             5.1         3.8          1.5         0.3     setosa\n21             5.4         3.4          1.7         0.2     setosa\n22             5.1         3.7          1.5         0.4     setosa\n24             5.1         3.3          1.7         0.5     setosa\n28             5.2         3.5          1.5         0.2     setosa\n29             5.2         3.4          1.4         0.2     setosa\n32             5.4         3.4          1.5         0.4     setosa\n33             5.2         4.1          1.5         0.1     setosa\n34             5.5         4.2          1.4         0.2     setosa\n37             5.5         3.5          1.3         0.2     setosa\n40             5.1         3.4          1.5         0.2     setosa\n45             5.1         3.8          1.9         0.4     setosa\n47             5.1         3.8          1.6         0.2     setosa\n49             5.3         3.7          1.5         0.2     setosa\n51             7.0         3.2          4.7         1.4 versicolor\n52             6.4         3.2          4.5         1.5 versicolor\n53             6.9         3.1          4.9         1.5 versicolor\n54             5.5         2.3          4.0         1.3 versicolor\n55             6.5         2.8          4.6         1.5 versicolor\n56             5.7         2.8          4.5         1.3 versicolor\n57             6.3         3.3          4.7         1.6 versicolor\n59             6.6         2.9          4.6         1.3 versicolor\n60             5.2         2.7          3.9         1.4 versicolor\n62             5.9         3.0          4.2         1.5 versicolor\n63             6.0         2.2          4.0         1.0 versicolor\n64             6.1         2.9          4.7         1.4 versicolor\n65             5.6         2.9          3.6         1.3 versicolor\n66             6.7         3.1          4.4         1.4 versicolor\n67             5.6         3.0          4.5         1.5 versicolor\n68             5.8         2.7          4.1         1.0 versicolor\n69             6.2         2.2          4.5         1.5 versicolor\n70             5.6         2.5          3.9         1.1 versicolor\n71             5.9         3.2          4.8         1.8 versicolor\n72             6.1         2.8          4.0         1.3 versicolor\n73             6.3         2.5          4.9         1.5 versicolor\n74             6.1         2.8          4.7         1.2 versicolor\n75             6.4         2.9          4.3         1.3 versicolor\n76             6.6         3.0          4.4         1.4 versicolor\n77             6.8         2.8          4.8         1.4 versicolor\n78             6.7         3.0          5.0         1.7 versicolor\n79             6.0         2.9          4.5         1.5 versicolor\n80             5.7         2.6          3.5         1.0 versicolor\n81             5.5         2.4          3.8         1.1 versicolor\n82             5.5         2.4          3.7         1.0 versicolor\n83             5.8         2.7          3.9         1.2 versicolor\n84             6.0         2.7          5.1         1.6 versicolor\n85             5.4         3.0          4.5         1.5 versicolor\n86             6.0         3.4          4.5         1.6 versicolor\n87             6.7         3.1          4.7         1.5 versicolor\n88             6.3         2.3          4.4         1.3 versicolor\n89             5.6         3.0          4.1         1.3 versicolor\n90             5.5         2.5          4.0         1.3 versicolor\n91             5.5         2.6          4.4         1.2 versicolor\n92             6.1         3.0          4.6         1.4 versicolor\n93             5.8         2.6          4.0         1.2 versicolor\n95             5.6         2.7          4.2         1.3 versicolor\n96             5.7         3.0          4.2         1.2 versicolor\n97             5.7         2.9          4.2         1.3 versicolor\n98             6.2         2.9          4.3         1.3 versicolor\n99             5.1         2.5          3.0         1.1 versicolor\n100            5.7         2.8          4.1         1.3 versicolor\n101            6.3         3.3          6.0         2.5  virginica\n102            5.8         2.7          5.1         1.9  virginica\n103            7.1         3.0          5.9         2.1  virginica\n104            6.3         2.9          5.6         1.8  virginica\n105            6.5         3.0          5.8         2.2  virginica\n106            7.6         3.0          6.6         2.1  virginica\n108            7.3         2.9          6.3         1.8  virginica\n109            6.7         2.5          5.8         1.8  virginica\n110            7.2         3.6          6.1         2.5  virginica\n111            6.5         3.2          5.1         2.0  virginica\n112            6.4         2.7          5.3         1.9  virginica\n113            6.8         3.0          5.5         2.1  virginica\n114            5.7         2.5          5.0         2.0  virginica\n115            5.8         2.8          5.1         2.4  virginica\n116            6.4         3.2          5.3         2.3  virginica\n117            6.5         3.0          5.5         1.8  virginica\n118            7.7         3.8          6.7         2.2  virginica\n119            7.7         2.6          6.9         2.3  virginica\n120            6.0         2.2          5.0         1.5  virginica\n121            6.9         3.2          5.7         2.3  virginica\n122            5.6         2.8          4.9         2.0  virginica\n123            7.7         2.8          6.7         2.0  virginica\n124            6.3         2.7          4.9         1.8  virginica\n125            6.7         3.3          5.7         2.1  virginica\n126            7.2         3.2          6.0         1.8  virginica\n127            6.2         2.8          4.8         1.8  virginica\n128            6.1         3.0          4.9         1.8  virginica\n129            6.4         2.8          5.6         2.1  virginica\n130            7.2         3.0          5.8         1.6  virginica\n131            7.4         2.8          6.1         1.9  virginica\n132            7.9         3.8          6.4         2.0  virginica\n133            6.4         2.8          5.6         2.2  virginica\n134            6.3         2.8          5.1         1.5  virginica\n135            6.1         2.6          5.6         1.4  virginica\n136            7.7         3.0          6.1         2.3  virginica\n137            6.3         3.4          5.6         2.4  virginica\n138            6.4         3.1          5.5         1.8  virginica\n139            6.0         3.0          4.8         1.8  virginica\n140            6.9         3.1          5.4         2.1  virginica\n141            6.7         3.1          5.6         2.4  virginica\n142            6.9         3.1          5.1         2.3  virginica\n143            5.8         2.7          5.1         1.9  virginica\n144            6.8         3.2          5.9         2.3  virginica\n145            6.7         3.3          5.7         2.5  virginica\n146            6.7         3.0          5.2         2.3  virginica\n147            6.3         2.5          5.0         1.9  virginica\n148            6.5         3.0          5.2         2.0  virginica\n149            6.2         3.4          5.4         2.3  virginica\n150            5.9         3.0          5.1         1.8  virginica\n84.1           6.0         2.7          5.1         1.6 versicolor\n101.1          6.3         3.3          6.0         2.5  virginica\n102.1          5.8         2.7          5.1         1.9  virginica\n103.1          7.1         3.0          5.9         2.1  virginica\n104.1          6.3         2.9          5.6         1.8  virginica\n105.1          6.5         3.0          5.8         2.2  virginica\n106.1          7.6         3.0          6.6         2.1  virginica\n108.1          7.3         2.9          6.3         1.8  virginica\n109.1          6.7         2.5          5.8         1.8  virginica\n110.1          7.2         3.6          6.1         2.5  virginica\n111.1          6.5         3.2          5.1         2.0  virginica\n112.1          6.4         2.7          5.3         1.9  virginica\n113.1          6.8         3.0          5.5         2.1  virginica\n115.1          5.8         2.8          5.1         2.4  virginica\n116.1          6.4         3.2          5.3         2.3  virginica\n117.1          6.5         3.0          5.5         1.8  virginica\n118.1          7.7         3.8          6.7         2.2  virginica\n119.1          7.7         2.6          6.9         2.3  virginica\n121.1          6.9         3.2          5.7         2.3  virginica\n123.1          7.7         2.8          6.7         2.0  virginica\n125.1          6.7         3.3          5.7         2.1  virginica\n126.1          7.2         3.2          6.0         1.8  virginica\n129.1          6.4         2.8          5.6         2.1  virginica\n130.1          7.2         3.0          5.8         1.6  virginica\n131.1          7.4         2.8          6.1         1.9  virginica\n132.1          7.9         3.8          6.4         2.0  virginica\n133.1          6.4         2.8          5.6         2.2  virginica\n134.1          6.3         2.8          5.1         1.5  virginica\n135.1          6.1         2.6          5.6         1.4  virginica\n136.1          7.7         3.0          6.1         2.3  virginica\n137.1          6.3         3.4          5.6         2.4  virginica\n138.1          6.4         3.1          5.5         1.8  virginica\n140.1          6.9         3.1          5.4         2.1  virginica\n141.1          6.7         3.1          5.6         2.4  virginica\n142.1          6.9         3.1          5.1         2.3  virginica\n143.1          5.8         2.7          5.1         1.9  virginica\n144.1          6.8         3.2          5.9         2.3  virginica\n145.1          6.7         3.3          5.7         2.5  virginica\n146.1          6.7         3.0          5.2         2.3  virginica\n148.1          6.5         3.0          5.2         2.0  virginica\n149.1          6.2         3.4          5.4         2.3  virginica\n150.1          5.9         3.0          5.1         1.8  virginica\n\niris[unique(idx[,1]),]\n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n11           5.4         3.7          1.5         0.2     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n24           5.1         3.3          1.7         0.5     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n45           5.1         3.8          1.9         0.4     setosa\n47           5.1         3.8          1.6         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n#5 함수\nfavorite &lt;- c('WINTER','SUMMER','SPRING','SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')\nfavorite\n\n [1] \"WINTER\" \"SUMMER\" \"SPRING\" \"SUMMER\" \"SUMMER\" \"FALL\"   \"FALL\"   \"SUMMER\"\n [9] \"SPRING\" \"SPRING\"\ntable(favorite)\n\nfavorite\n  FALL SPRING SUMMER WINTER \n     2      3      4      1 \n\nlength(favorite)\n\n[1] 10\n\ntable(favorite)/length(favorite)\n\nfavorite\n  FALL SPRING SUMMER WINTER \n   0.2    0.3    0.4    0.1\nds &lt;- table(favorite)\nds\n\nfavorite\n  FALL SPRING SUMMER WINTER \n     2      3      4      1\nbarplot(ds,main='favorite season')\nds &lt;- table(favorite)\nds\n\nfavorite\n  FALL SPRING SUMMER WINTER \n     2      3      4      1\npie(ds,main='favorite season')\nfavorite.color &lt;- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)\n\nds &lt;- table(favorite.color)\ncolors &lt;- c('green','red','blue')\nnames(ds) &lt;- colors\n\nds\n\ngreen   red  blue \n    5     7     3\nbarplot(ds,main='favorite color')\nbarplot(ds,\n        main='favorite color',\n        col=colors)\npie(ds,main='favorite colors',\n    col=colors)\n#과제 2 1-4번 \n#과제2) 1번 4) 문제  if, else if, else, for문 활용하세요.\n#4) 중간고사 성적이 90점 이상은 A학점, 80점 이상은 B학점, 70점 이상은 C학점, 60점 이상은 D학점, 나머지는 F학점을 주려고 합니다. 해당 문제를 Code를 활용하여 풀어보세요.(if, else if, else, for문 활용)\n\nweight &lt;- c(60,62,64,65,68,69)\nweight.heavy &lt;- c(weight,120)\nweight\n\n[1] 60 62 64 65 68 69\n\nweight.heavy\n\n[1]  60  62  64  65  68  69 120\nmean(weight)\n\n[1] 64.66667\n\nmean(weight.heavy)\n\n[1] 72.57143\nmean(weight,trim=0.2)\n\n[1] 64.75\n\nmean(weight.heavy,trim=0.2)\n\n[1] 65.6\nmedian(weight)\n\n[1] 64.5\n\nmedian(weight.heavy)\n\n[1] 65\nmydata &lt;- c(60,62,64,65,68,69,120)\nquantile(mydata)\n\n   0%   25%   50%   75%  100% \n 60.0  63.0  65.0  68.5 120.0 \n\nquantile(mydata,(0:10)/10)\n\n   0%   10%   20%   30%   40%   50%   60%   70%   80%   90%  100% \n 60.0  61.2  62.4  63.6  64.4  65.0  66.8  68.2  68.8  89.4 120.0 \n\nsummary(mydata)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  60.00   63.00   65.00   72.57   68.50  120.00\nmydata &lt;- c(60,62,64,65,68,69,120)\nvar(mydata)\n\n[1] 447.2857\n\nsd(mydata)\n\n[1] 21.14913\n\nrange(mydata)\n\n[1]  60 120\n\ndiff(range(mydata))\n\n[1] 60\ndist &lt;- cars[,2]\nhist(dist,\n     main=\"Histogram for 제동거리\",\n     xlab=\"제동거리\",\n     ylab=\"빈도수\",\n     border = \"blue\",\n     col=\"green\",\n     las=2,\n     breaks=5)"
  },
  {
    "objectID": "posts/1128.html#과제",
    "href": "posts/1128.html#과제",
    "title": "PT.6 - 조건문",
    "section": "과제",
    "text": "과제\n\nweight &lt;-c(45,55,65,75,86,74,67,98,50,66)\na &lt;- character(length(weight))\n\nfor (i in 1:length(weight)) {\n  if (weight[i] &gt;= 90) {\n    a[i] &lt;- \"A\"\n  } else if (weight[i] &gt;= 80 & weight[i] &lt; 90) {\n    a[i] &lt;- \"B\"\n  } else if (weight[i] &gt;= 70 & weight[i] &lt; 80) {\n    a[i] &lt;- \"C\"\n  } else if (weight[i] &gt;= 60 & weight[i] &lt; 70) {\n    a[i] &lt;- \"D\"\n  } else {\n    a[i] &lt;- \"F\"\n  }\n}\n\na\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\"\n\nifelse(weight &gt;= 90, \"A\", \n       ifelse(weight &gt;= 80, \"B\",\n              ifelse(weight &gt;= 70, \"C\", \n                     ifelse(weight &gt;= 60, \"D\",\"F\"))))\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\""
  },
  {
    "objectID": "posts/1114.html",
    "href": "posts/1114.html",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1114.html#조건문",
    "href": "posts/1114.html#조건문",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1114.html#ifelse",
    "href": "posts/1114.html#ifelse",
    "title": "PT.6 - 조건문",
    "section": "ifelse()",
    "text": "ifelse()\nifelse(조건식, 참인 경우 실행할 코드, 거짓일 경우 실행할 코드)\n\nx &lt;- -10\nifelse(x&gt;0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"음수입니다.\"\n\nx &lt;- c(10, -5, 0)\nifelse(x &gt; 0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"양수입니다.\" \"음수입니다.\" \"음수입니다.\"\n\n\n\n계단식 ifelse()도 가능\n\nx &lt;- c(65,55,95,40,85,75,77)\nifelse(x&gt;=80, \"A\", \n       ifelse(x&gt;=60, \"B\", \n              ifelse(x&gt;=40, \"C\", \"F\")))\n\n[1] \"B\" \"C\" \"A\" \"C\" \"A\" \"B\" \"B\""
  },
  {
    "objectID": "posts/1114.html#문제",
    "href": "posts/1114.html#문제",
    "title": "PT.6 - 조건문",
    "section": "문제",
    "text": "문제\n빅데이터응용학과에 10명의 학생이 중간고사 시험을 봤습니다. 10명의 성적은 아래와 같습니다.\n45,55,65,75,86,74,67,98,50,66\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\n\n\n1) 중간고사 평균 성적을 계산하세요.\n\nmean(mid_exam)\n\n[1] 68.1\n\n\n\n\n2) 중간고사 중간값을 찾으세요.\n\nmedian(mid_exam)\n\n[1] 66.5\n\n\n\n\n3) 중간고사 최고 성적은 몇점인가요.\n\nmax(mid_exam)\n\n[1] 98\n\n\n\n\n4) 중간고사 성적을 분류하시오\n\n90점 이상은 A학점\n80점 이상은 B학점\n70점 이상은 C학점\n60점 이상은 D학점\n나머지는 F학점\n\n해당 문제를 Code를 활용하여 풀어보세요.(ifelse문 활용)\n\nifelse(mid_exam &gt;= 90, \"A\", \n       ifelse(mid_exam &gt;= 80, \"B\",\n              ifelse(mid_exam &gt;= 70, \"C\", \n                     ifelse(mid_exam &gt;= 60, \"D\",\"F\"))))\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\"\n\n\n\n반복문을 사용해서 하는 방법 (비추, ifelse()함수 쓰셈)\n\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\na &lt;- character(length(mid_exam))\n\nfor (i in 1:length(mid_exam)) {\n  if (mid_exam[i] &gt;= 90) {\n    a[i] &lt;- \"A\"\n  } else if (mid_exam[i] &gt;= 80 & mid_exam[i] &lt; 90) {\n    a[i] &lt;- \"B\"\n  } else if (mid_exam[i] &gt;= 70 & mid_exam[i] &lt; 80) {\n    a[i] &lt;- \"C\"\n  } else if (mid_exam[i] &gt;= 60 & mid_exam[i] &lt; 70) {\n    a[i] &lt;- \"D\"\n  } else {\n    a[i] &lt;- \"F\"\n  }\n}\n\na\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\""
  },
  {
    "objectID": "posts/1121.html",
    "href": "posts/1121.html",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1121.html#조건문",
    "href": "posts/1121.html#조건문",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1121.html#ifelse",
    "href": "posts/1121.html#ifelse",
    "title": "PT.6 - 조건문",
    "section": "ifelse()",
    "text": "ifelse()\nifelse(조건식, 참인 경우 실행할 코드, 거짓일 경우 실행할 코드)\n\nx &lt;- -10\nifelse(x&gt;0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"음수입니다.\"\n\nx &lt;- c(10, -5, 0)\nifelse(x &gt; 0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"양수입니다.\" \"음수입니다.\" \"음수입니다.\"\n\n\n\n계단식 ifelse()도 가능\n\nx &lt;- c(65,55,95,40,85,75,77)\nifelse(x&gt;=80, \"A\", \n       ifelse(x&gt;=60, \"B\", \n              ifelse(x&gt;=40, \"C\", \"F\")))\n\n[1] \"B\" \"C\" \"A\" \"C\" \"A\" \"B\" \"B\""
  },
  {
    "objectID": "posts/1121.html#문제",
    "href": "posts/1121.html#문제",
    "title": "PT.6 - 조건문",
    "section": "문제",
    "text": "문제\n빅데이터응용학과에 10명의 학생이 중간고사 시험을 봤습니다. 10명의 성적은 아래와 같습니다.\n45,55,65,75,86,74,67,98,50,66\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\n\n\n1) 중간고사 평균 성적을 계산하세요.\n\nmean(mid_exam)\n\n[1] 68.1\n\n\n\n\n2) 중간고사 중간값을 찾으세요.\n\nmedian(mid_exam)\n\n[1] 66.5\n\n\n\n\n3) 중간고사 최고 성적은 몇점인가요.\n\nmax(mid_exam)\n\n[1] 98\n\n\n\n\n4) 중간고사 성적을 분류하시오\n\n90점 이상은 A학점\n80점 이상은 B학점\n70점 이상은 C학점\n60점 이상은 D학점\n나머지는 F학점\n\n해당 문제를 Code를 활용하여 풀어보세요.(ifelse문 활용)\n\nifelse(mid_exam &gt;= 90, \"A\", \n       ifelse(mid_exam &gt;= 80, \"B\",\n              ifelse(mid_exam &gt;= 70, \"C\", \n                     ifelse(mid_exam &gt;= 60, \"D\",\"F\"))))\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\"\n\n\n\n반복문을 사용해서 하는 방법 (비추, ifelse()함수 쓰셈)\n\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\na &lt;- character(length(mid_exam))\n\nfor (i in 1:length(mid_exam)) {\n  if (mid_exam[i] &gt;= 90) {\n    a[i] &lt;- \"A\"\n  } else if (mid_exam[i] &gt;= 80 & mid_exam[i] &lt; 90) {\n    a[i] &lt;- \"B\"\n  } else if (mid_exam[i] &gt;= 70 & mid_exam[i] &lt; 80) {\n    a[i] &lt;- \"C\"\n  } else if (mid_exam[i] &gt;= 60 & mid_exam[i] &lt; 70) {\n    a[i] &lt;- \"D\"\n  } else {\n    a[i] &lt;- \"F\"\n  }\n}\n\na\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\""
  },
  {
    "objectID": "posts/1114_pt7.html",
    "href": "posts/1114_pt7.html",
    "title": "PT.7 - 반복문",
    "section": "",
    "text": "x &lt;- c() #비어있는 벡터x 생성\nfor (i in 1:5) {\n  j &lt;- i*3\n  x &lt;- c(x,j)#벡터 X에 j의 값 추가\n  }\nprint(x)\n\n[1]  3  6  9 12 15"
  },
  {
    "objectID": "posts/1114_pt7.html#반복문으로-3-배수-출력",
    "href": "posts/1114_pt7.html#반복문으로-3-배수-출력",
    "title": "PT.7 - 반복문",
    "section": "",
    "text": "x &lt;- c() #비어있는 벡터x 생성\nfor (i in 1:5) {\n  j &lt;- i*3\n  x &lt;- c(x,j)#벡터 X에 j의 값 추가\n  }\nprint(x)\n\n[1]  3  6  9 12 15"
  },
  {
    "objectID": "posts/1114_pt7.html#반복문으로-i-x-출력-3배수",
    "href": "posts/1114_pt7.html#반복문으로-i-x-출력-3배수",
    "title": "PT.7 - 반복문",
    "section": "반복문으로 i, x 출력 (3배수)",
    "text": "반복문으로 i, x 출력 (3배수)\n\ncat 활용 (print() 사용시 \\n은 문자열로 출력됨)\n\\n : 줄바꿈 기호\n\n\nx &lt;- c() \nfor (i in 1:9) {\n  j &lt;- i*3\n  x &lt;- c(x, i, j, \"\\n\")\n}\n\ncat(x)\n\n1 3 \n 2 6 \n 3 9 \n 4 12 \n 5 15 \n 6 18 \n 7 21 \n 8 24 \n 9 27 \n\n\n\nprint() 사용시 \\n은 문자열로 출력됨\n\n\nprint(x)\n\n [1] \"1\"  \"3\"  \"\\n\" \"2\"  \"6\"  \"\\n\" \"3\"  \"9\"  \"\\n\" \"4\"  \"12\" \"\\n\" \"5\"  \"15\" \"\\n\"\n[16] \"6\"  \"18\" \"\\n\" \"7\"  \"21\" \"\\n\" \"8\"  \"24\" \"\\n\" \"9\"  \"27\" \"\\n\""
  },
  {
    "objectID": "posts/1031_pt5_midterm.html",
    "href": "posts/1031_pt5_midterm.html",
    "title": "PT.5 - 중간고사",
    "section": "",
    "text": "V1 &lt;- c(15,16,17,18,19,20,21,22,23,24,25)\nV1\n\n [1] 15 16 17 18 19 20 21 22 23 24 25"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#v1-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "href": "posts/1031_pt5_midterm.html#v1-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "title": "PT.5 - 중간고사",
    "section": "",
    "text": "V1 &lt;- c(15,16,17,18,19,20,21,22,23,24,25)\nV1\n\n [1] 15 16 17 18 19 20 21 22 23 24 25"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#위-번-문제에서-최대값을-얻기-위한-함수를-사용하여-최대값을-출력하세요",
    "href": "posts/1031_pt5_midterm.html#위-번-문제에서-최대값을-얻기-위한-함수를-사용하여-최대값을-출력하세요",
    "title": "PT.5 - 중간고사",
    "section": "2. (1) 위 번 문제에서 최대값을 얻기 위한 함수를 사용하여 최대값을 출력하세요",
    "text": "2. (1) 위 번 문제에서 최대값을 얻기 위한 함수를 사용하여 최대값을 출력하세요\n\nmax(V1)\n\n[1] 25"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#v2-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "href": "posts/1031_pt5_midterm.html#v2-변수-가-아래와-같은-값을-가지기-위한-r-code를-입력하세요",
    "title": "PT.5 - 중간고사",
    "section": "3. V2 변수 가 아래와 같은 값을 가지기 위한 R CODE를 입력하세요",
    "text": "3. V2 변수 가 아래와 같은 값을 가지기 위한 R CODE를 입력하세요\n\n반드시 일정한 간격의 숫자를 생성하는 함수를 활용하세요\n\n\nV2 &lt;- seq(1,148,3)\n\nV2\n\n [1]   1   4   7  10  13  16  19  22  25  28  31  34  37  40  43  46  49  52  55\n[20]  58  61  64  67  70  73  76  79  82  85  88  91  94  97 100 103 106 109 112\n[39] 115 118 121 124 127 130 133 136 139 142 145 148"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#v3-변수-가-위와-같은-값을-가지기-위한-r-code를-입력하세요",
    "href": "posts/1031_pt5_midterm.html#v3-변수-가-위와-같은-값을-가지기-위한-r-code를-입력하세요",
    "title": "PT.5 - 중간고사",
    "section": "4. V3 변수 가 위와 같은 값을 가지기 위한 R CODE를 입력하세요",
    "text": "4. V3 변수 가 위와 같은 값을 가지기 위한 R CODE를 입력하세요\n\n반드시 반복된 숫자를 생성하는 함수를 활용하세요\n\n\nV3 &lt;- rep(seq(1,13,3),3)\nV3\n\n [1]  1  4  7 10 13  1  4  7 10 13  1  4  7 10 13"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#v4-v4-가-아래와-같을-때-의-7-15-번째-값을-로-변경하려고-합니다-해당-r코드를-작성하세요",
    "href": "posts/1031_pt5_midterm.html#v4-v4-가-아래와-같을-때-의-7-15-번째-값을-로-변경하려고-합니다-해당-r코드를-작성하세요",
    "title": "PT.5 - 중간고사",
    "section": "5. V4 V4 가 아래와 같을 때 의 7 15 번째 값을 로 변경하려고 합니다 해당 R코드를 작성하세요",
    "text": "5. V4 V4 가 아래와 같을 때 의 7 15 번째 값을 로 변경하려고 합니다 해당 R코드를 작성하세요\n\nV4 &lt;- c(1,5,15,7,8,9,13,22,3,5,7)\nV4[7] &lt;- 15\nV4\n\n [1]  1  5 15  7  8  9 15 22  3  5  7"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#v5-아래와-같이-변수-의-값을-생성하고-주어진-문제를-풀어보세요-반드시-코드를-활용해서-답을-찾으세요",
    "href": "posts/1031_pt5_midterm.html#v5-아래와-같이-변수-의-값을-생성하고-주어진-문제를-풀어보세요-반드시-코드를-활용해서-답을-찾으세요",
    "title": "PT.5 - 중간고사",
    "section": "6. V5 아래와 같이 변수 의 값을 생성하고 주어진 문제를 풀어보세요 반드시 코드를 활용해서 답을 찾으세요",
    "text": "6. V5 아래와 같이 변수 의 값을 생성하고 주어진 문제를 풀어보세요 반드시 코드를 활용해서 답을 찾으세요\n\na) V5 변수 를 생성하세요\n\nV5 &lt;- seq(1,100)\nV5\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n\n\n\nb) V5 변수 가 가지는 모든 값들의 합을 계산하세요\n\nsum(V5)\n\n[1] 5050\n\n\n\n\nc) V5 변수 의 평균값을 계산하세요\n\nmean(V5)\n\n[1] 50.5\n\n\n\n\nd) V5 변수 의 중간값을 계산하세요\n\nmedian(V5)\n\n[1] 50.5\n\n\n\n\ne) V5 변수 의 표준편차를 계산하세요\n\nsd(V5)\n\n[1] 29.01149\n\n\n\n\nf) V5 변수 의 값들의 범위를 산출하세요 (최소값, 최대값)\n\nrange(V5)\n\n[1]   1 100\n\n\n\n\ng) V5변수에서 62보다 큰 수를 모두 출력하세요\n\nV5[V5&gt;62]\n\n [1]  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81\n[20]  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100\n\n\n\n\nh) V5변수에서 62보다 크고 87보다 작은 수를 모두 출력하여 합을 계산하세요\n\nsum(V5[V5&gt;62 & V5&lt;87])\n\n[1] 1788\n\n\n\n\ni) V5변수에서 8의 배수들의 값을 NA( ) 결측값 으로 변경하세요\n\nV5[V5 %% 8 == 0] &lt;- NA\n\n\n\nj) (i) NA 에서 생성한 를 제외한 V5의 평균값을 계산하세요\n\nmean(V5, na.rm = TRUE)\n\n[1] 50.29545"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#r을-이용하여-각-문제를-수행하기-위한-코드를-작성하시오",
    "href": "posts/1031_pt5_midterm.html#r을-이용하여-각-문제를-수행하기-위한-코드를-작성하시오",
    "title": "PT.5 - 중간고사",
    "section": "7. R을 이용하여 각 문제를 수행하기 위한 코드를 작성하시오",
    "text": "7. R을 이용하여 각 문제를 수행하기 위한 코드를 작성하시오\n\na) 아래와 같은 매트릭스 V6 를 생성하세요 (열이름 행이름 동일해야합니다)\n\nV6 &lt;- matrix(\n  c(91,40,52,\n    45,85,65,\n    85,87,90,\n    88,52,76),\n  nrow = 3)\n\nrownames(V6) &lt;- c(\"Minju\",\"Jiho\",\"Yongho\")\ncolnames(V6) &lt;- c(\"Kor\",\"Eng\",\"Math\",\"Sci\")\n\nV6\n\n       Kor Eng Math Sci\nMinju   91  45   85  88\nJiho    40  85   87  52\nYongho  52  65   90  76\n\n\n\n\nb) 2행에 있는 모든 값을 출력하세요\n\nV6[2,]\n\n Kor  Eng Math  Sci \n  40   85   87   52 \n\n\n\n\nc) 3열의 모든 값을 출력하세요\n\nV6[,3]\n\n Minju   Jiho Yongho \n    85     87     90 \n\n\n\n\nd) 3 3 행 열의 값을 출력하세요\n\nV6[3,3]\n\n[1] 90\n\n\n\n\ne) Jiho Math 의 점수가 잘못 채점 되어 95점으로 변경되었습니다 매트릭스 . V6 Jiho 에서의 수학 성적을 95점으로 변경하세요\n\nV6[\"Jiho\",\"Math\"] &lt;- 95\nV6\n\n       Kor Eng Math Sci\nMinju   91  45   85  88\nJiho    40  85   95  52\nYongho  52  65   90  76\n\n\n\n\nf) (e) V6 에서 수정된 를 바탕으로 Minju, Jiho, Yongho의 성적의 평균값을 계산한 뒤, 아래와 같이 새로운 열을 추가하세요\n\nV6 &lt;- cbind(V6,rowMeans(V6))\ncolnames(V6) &lt;- c(\"Kor\",\"Eng\",\"Math\",\"Sci\",\"Mean\")\n\nV6\n\n       Kor Eng Math Sci  Mean\nMinju   91  45   85  88 77.25\nJiho    40  85   95  52 68.00\nYongho  52  65   90  76 70.75"
  },
  {
    "objectID": "posts/1031_pt5_midterm.html#travel_plan.csv-파일명-제리-스티븐슨-은-jerry-stevenson-여행사의-매니저이다.",
    "href": "posts/1031_pt5_midterm.html#travel_plan.csv-파일명-제리-스티븐슨-은-jerry-stevenson-여행사의-매니저이다.",
    "title": "PT.5 - 중간고사",
    "section": "8. ( : Travel_Plan.csv) 파일명 제리 스티븐슨 은 (Jerry Stevenson) 여행사의 매니저이다.",
    "text": "8. ( : Travel_Plan.csv) 파일명 제리 스티븐슨 은 (Jerry Stevenson) 여행사의 매니저이다.\n그는 고객이 내년 안에 여행할 것인지 여부를 예측할 수 있는 모형을 구축하고자 한다 그는 . 다음과 같은 변수를 포함하는 데이터셋을 수집했다 :\n\n대학학위를 가지고 있는지 (College)\n신용카드를 가지고 있는지 (Credit-Card)\n음식에 대한 연간 가계지출 달러 (FoodSpend)\n연소득 달러 고객이 (Income)\n내년 안에 여행할 계획이 있는지 여행계획 (TravelPlan : 1 = 있음, 0 = 없음)\n\n데이터의 일부를 아래 표에 보여준다\n\na) Travel_Plan.csv R 파일 를 로 불러와서 변수 df 로 저장하세요\n\ndf &lt;- read.csv(\"Travel_Plan.csv\")\n\n\n\nb) df 변수 의 속성을 확인하세요. 불러온 데이터는 어떤 형테의 자료인가요 매트릭스인가요, 데이터프레임 인가요\n(반드시 속성을 확인하는 함수 사용하세요)\n\nis.matrix(df)\nis.data.frame(df)\n\n\n\nc) 50,000 연소득이 달러 이상인 사람은 몇 명인가요 점\n\nnrow(subset(df,Income &gt; 50000))\n\n\n\nd) (Credit-Card) 신용카드 가 있는 사람 중에 연소득이 60,000 달러 이상인 사람은 몇명인가요\n\nnrow(subset(df,CreditCard == \"Yes\" & Income &gt; 60000))\n\n\n\ne) 여행계획이 있는 사람들의(TravelPlan : 1) 연소득 평균값과 여행 계획이 없는 사람들의(TravelPlan : 0) 연소득 평균값을 계산한 다음 비교하세요\n여행계획이 있는 사람의 연소득 평균값이 얼마 더 높은가요\n\nmean(subset(df,TravelPlan == 1)$Income)\nmean(subset(df,TravelPlan == 0)$Income)\n\n\n\nf) (Income)연소득을 기준으로 내림차순으로 정렬한 다음 연소득 상위 100명의 데이터를추출하세요\n(변수명 : df_100 ) 추출된 데이터를 Travel_Plan_100.csv 이름으로 저장하세요\n\ndf_100 &lt;- head(df[order(df$Income, decreasing = TRUE),])\n\nwrite.csv(df_100, \"df_100.csv\")"
  },
  {
    "objectID": "posts/1121_pt8.html",
    "href": "posts/1121_pt8.html",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "",
    "text": "job.type &lt;- 'A'\n\nif(job.type=='B'){\n  bonus &lt;- 200\n}else{\n  bonus &lt;- 100\n}\nprint(bonus)\n\n[1] 100"
  },
  {
    "objectID": "posts/1121_pt8.html#조건문",
    "href": "posts/1121_pt8.html#조건문",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1121_pt8.html#ifelse",
    "href": "posts/1121_pt8.html#ifelse",
    "title": "PT.6 - 조건문",
    "section": "ifelse()",
    "text": "ifelse()\nifelse(조건식, 참인 경우 실행할 코드, 거짓일 경우 실행할 코드)\n\nx &lt;- -10\nifelse(x&gt;0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"음수입니다.\"\n\nx &lt;- c(10, -5, 0)\nifelse(x &gt; 0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"양수입니다.\" \"음수입니다.\" \"음수입니다.\"\n\n\n\n계단식 ifelse()도 가능\n\nx &lt;- c(65,55,95,40,85,75,77)\nifelse(x&gt;=80, \"A\", \n       ifelse(x&gt;=60, \"B\", \n              ifelse(x&gt;=40, \"C\", \"F\")))\n\n[1] \"B\" \"C\" \"A\" \"C\" \"A\" \"B\" \"B\""
  },
  {
    "objectID": "posts/1121_pt8.html#문제",
    "href": "posts/1121_pt8.html#문제",
    "title": "PT.6 - 조건문",
    "section": "문제",
    "text": "문제\n빅데이터응용학과에 10명의 학생이 중간고사 시험을 봤습니다. 10명의 성적은 아래와 같습니다.\n45,55,65,75,86,74,67,98,50,66\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\n\n\n1) 중간고사 평균 성적을 계산하세요.\n\nmean(mid_exam)\n\n[1] 68.1\n\n\n\n\n2) 중간고사 중간값을 찾으세요.\n\nmedian(mid_exam)\n\n[1] 66.5\n\n\n\n\n3) 중간고사 최고 성적은 몇점인가요.\n\nmax(mid_exam)\n\n[1] 98\n\n\n\n\n4) 중간고사 성적을 분류하시오\n\n90점 이상은 A학점\n80점 이상은 B학점\n70점 이상은 C학점\n60점 이상은 D학점\n나머지는 F학점\n\n해당 문제를 Code를 활용하여 풀어보세요.(ifelse문 활용)\n\nifelse(mid_exam &gt;= 90, \"A\", \n       ifelse(mid_exam &gt;= 80, \"B\",\n              ifelse(mid_exam &gt;= 70, \"C\", \n                     ifelse(mid_exam &gt;= 60, \"D\",\"F\"))))\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\"\n\n\n\n반복문을 사용해서 하는 방법 (비추, ifelse()함수 쓰셈)\n\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\na &lt;- character(length(mid_exam))\n\nfor (i in 1:length(mid_exam)) {\n  if (mid_exam[i] &gt;= 90) {\n    a[i] &lt;- \"A\"\n  } else if (mid_exam[i] &gt;= 80 & mid_exam[i] &lt; 90) {\n    a[i] &lt;- \"B\"\n  } else if (mid_exam[i] &gt;= 70 & mid_exam[i] &lt; 80) {\n    a[i] &lt;- \"C\"\n  } else if (mid_exam[i] &gt;= 60 & mid_exam[i] &lt; 70) {\n    a[i] &lt;- \"D\"\n  } else {\n    a[i] &lt;- \"F\"\n  }\n}\n\na\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\""
  },
  {
    "objectID": "posts/1128_pt9.html",
    "href": "posts/1128_pt9.html",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "which(iris[,1:4]&gt;5.0)\n\n  [1]   1   6  11  15  16  17  18  19  20  21  22  24  28  29  32  33  34  37\n [19]  40  45  47  49  51  52  53  54  55  56  57  59  60  62  63  64  65  66\n [37]  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84\n [55]  85  86  87  88  89  90  91  92  93  95  96  97  98  99 100 101 102 103\n [73] 104 105 106 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122\n [91] 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140\n[109] 141 142 143 144 145 146 147 148 149 150 384 401 402 403 404 405 406 408\n[127] 409 410 411 412 413 415 416 417 418 419 421 423 425 426 429 430 431 432\n[145] 433 434 435 436 437 438 440 441 442 443 444 445 446 448 449 450\nidx &lt;- which(iris[,1:4]&gt;5.0,arr.ind=TRUE)\nidx[,1]\n\n  [1]   1   6  11  15  16  17  18  19  20  21  22  24  28  29  32  33  34  37\n [19]  40  45  47  49  51  52  53  54  55  56  57  59  60  62  63  64  65  66\n [37]  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84\n [55]  85  86  87  88  89  90  91  92  93  95  96  97  98  99 100 101 102 103\n [73] 104 105 106 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122\n [91] 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140\n[109] 141 142 143 144 145 146 147 148 149 150  84 101 102 103 104 105 106 108\n[127] 109 110 111 112 113 115 116 117 118 119 121 123 125 126 129 130 131 132\n[145] 133 134 135 136 137 138 140 141 142 143 144 145 146 148 149 150\n#하단 내용 할줄 알아야함!\niris[idx[,1],]\n\n      Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1              5.1         3.5          1.4         0.2     setosa\n6              5.4         3.9          1.7         0.4     setosa\n11             5.4         3.7          1.5         0.2     setosa\n15             5.8         4.0          1.2         0.2     setosa\n16             5.7         4.4          1.5         0.4     setosa\n17             5.4         3.9          1.3         0.4     setosa\n18             5.1         3.5          1.4         0.3     setosa\n19             5.7         3.8          1.7         0.3     setosa\n20             5.1         3.8          1.5         0.3     setosa\n21             5.4         3.4          1.7         0.2     setosa\n22             5.1         3.7          1.5         0.4     setosa\n24             5.1         3.3          1.7         0.5     setosa\n28             5.2         3.5          1.5         0.2     setosa\n29             5.2         3.4          1.4         0.2     setosa\n32             5.4         3.4          1.5         0.4     setosa\n33             5.2         4.1          1.5         0.1     setosa\n34             5.5         4.2          1.4         0.2     setosa\n37             5.5         3.5          1.3         0.2     setosa\n40             5.1         3.4          1.5         0.2     setosa\n45             5.1         3.8          1.9         0.4     setosa\n47             5.1         3.8          1.6         0.2     setosa\n49             5.3         3.7          1.5         0.2     setosa\n51             7.0         3.2          4.7         1.4 versicolor\n52             6.4         3.2          4.5         1.5 versicolor\n53             6.9         3.1          4.9         1.5 versicolor\n54             5.5         2.3          4.0         1.3 versicolor\n55             6.5         2.8          4.6         1.5 versicolor\n56             5.7         2.8          4.5         1.3 versicolor\n57             6.3         3.3          4.7         1.6 versicolor\n59             6.6         2.9          4.6         1.3 versicolor\n60             5.2         2.7          3.9         1.4 versicolor\n62             5.9         3.0          4.2         1.5 versicolor\n63             6.0         2.2          4.0         1.0 versicolor\n64             6.1         2.9          4.7         1.4 versicolor\n65             5.6         2.9          3.6         1.3 versicolor\n66             6.7         3.1          4.4         1.4 versicolor\n67             5.6         3.0          4.5         1.5 versicolor\n68             5.8         2.7          4.1         1.0 versicolor\n69             6.2         2.2          4.5         1.5 versicolor\n70             5.6         2.5          3.9         1.1 versicolor\n71             5.9         3.2          4.8         1.8 versicolor\n72             6.1         2.8          4.0         1.3 versicolor\n73             6.3         2.5          4.9         1.5 versicolor\n74             6.1         2.8          4.7         1.2 versicolor\n75             6.4         2.9          4.3         1.3 versicolor\n76             6.6         3.0          4.4         1.4 versicolor\n77             6.8         2.8          4.8         1.4 versicolor\n78             6.7         3.0          5.0         1.7 versicolor\n79             6.0         2.9          4.5         1.5 versicolor\n80             5.7         2.6          3.5         1.0 versicolor\n81             5.5         2.4          3.8         1.1 versicolor\n82             5.5         2.4          3.7         1.0 versicolor\n83             5.8         2.7          3.9         1.2 versicolor\n84             6.0         2.7          5.1         1.6 versicolor\n85             5.4         3.0          4.5         1.5 versicolor\n86             6.0         3.4          4.5         1.6 versicolor\n87             6.7         3.1          4.7         1.5 versicolor\n88             6.3         2.3          4.4         1.3 versicolor\n89             5.6         3.0          4.1         1.3 versicolor\n90             5.5         2.5          4.0         1.3 versicolor\n91             5.5         2.6          4.4         1.2 versicolor\n92             6.1         3.0          4.6         1.4 versicolor\n93             5.8         2.6          4.0         1.2 versicolor\n95             5.6         2.7          4.2         1.3 versicolor\n96             5.7         3.0          4.2         1.2 versicolor\n97             5.7         2.9          4.2         1.3 versicolor\n98             6.2         2.9          4.3         1.3 versicolor\n99             5.1         2.5          3.0         1.1 versicolor\n100            5.7         2.8          4.1         1.3 versicolor\n101            6.3         3.3          6.0         2.5  virginica\n102            5.8         2.7          5.1         1.9  virginica\n103            7.1         3.0          5.9         2.1  virginica\n104            6.3         2.9          5.6         1.8  virginica\n105            6.5         3.0          5.8         2.2  virginica\n106            7.6         3.0          6.6         2.1  virginica\n108            7.3         2.9          6.3         1.8  virginica\n109            6.7         2.5          5.8         1.8  virginica\n110            7.2         3.6          6.1         2.5  virginica\n111            6.5         3.2          5.1         2.0  virginica\n112            6.4         2.7          5.3         1.9  virginica\n113            6.8         3.0          5.5         2.1  virginica\n114            5.7         2.5          5.0         2.0  virginica\n115            5.8         2.8          5.1         2.4  virginica\n116            6.4         3.2          5.3         2.3  virginica\n117            6.5         3.0          5.5         1.8  virginica\n118            7.7         3.8          6.7         2.2  virginica\n119            7.7         2.6          6.9         2.3  virginica\n120            6.0         2.2          5.0         1.5  virginica\n121            6.9         3.2          5.7         2.3  virginica\n122            5.6         2.8          4.9         2.0  virginica\n123            7.7         2.8          6.7         2.0  virginica\n124            6.3         2.7          4.9         1.8  virginica\n125            6.7         3.3          5.7         2.1  virginica\n126            7.2         3.2          6.0         1.8  virginica\n127            6.2         2.8          4.8         1.8  virginica\n128            6.1         3.0          4.9         1.8  virginica\n129            6.4         2.8          5.6         2.1  virginica\n130            7.2         3.0          5.8         1.6  virginica\n131            7.4         2.8          6.1         1.9  virginica\n132            7.9         3.8          6.4         2.0  virginica\n133            6.4         2.8          5.6         2.2  virginica\n134            6.3         2.8          5.1         1.5  virginica\n135            6.1         2.6          5.6         1.4  virginica\n136            7.7         3.0          6.1         2.3  virginica\n137            6.3         3.4          5.6         2.4  virginica\n138            6.4         3.1          5.5         1.8  virginica\n139            6.0         3.0          4.8         1.8  virginica\n140            6.9         3.1          5.4         2.1  virginica\n141            6.7         3.1          5.6         2.4  virginica\n142            6.9         3.1          5.1         2.3  virginica\n143            5.8         2.7          5.1         1.9  virginica\n144            6.8         3.2          5.9         2.3  virginica\n145            6.7         3.3          5.7         2.5  virginica\n146            6.7         3.0          5.2         2.3  virginica\n147            6.3         2.5          5.0         1.9  virginica\n148            6.5         3.0          5.2         2.0  virginica\n149            6.2         3.4          5.4         2.3  virginica\n150            5.9         3.0          5.1         1.8  virginica\n84.1           6.0         2.7          5.1         1.6 versicolor\n101.1          6.3         3.3          6.0         2.5  virginica\n102.1          5.8         2.7          5.1         1.9  virginica\n103.1          7.1         3.0          5.9         2.1  virginica\n104.1          6.3         2.9          5.6         1.8  virginica\n105.1          6.5         3.0          5.8         2.2  virginica\n106.1          7.6         3.0          6.6         2.1  virginica\n108.1          7.3         2.9          6.3         1.8  virginica\n109.1          6.7         2.5          5.8         1.8  virginica\n110.1          7.2         3.6          6.1         2.5  virginica\n111.1          6.5         3.2          5.1         2.0  virginica\n112.1          6.4         2.7          5.3         1.9  virginica\n113.1          6.8         3.0          5.5         2.1  virginica\n115.1          5.8         2.8          5.1         2.4  virginica\n116.1          6.4         3.2          5.3         2.3  virginica\n117.1          6.5         3.0          5.5         1.8  virginica\n118.1          7.7         3.8          6.7         2.2  virginica\n119.1          7.7         2.6          6.9         2.3  virginica\n121.1          6.9         3.2          5.7         2.3  virginica\n123.1          7.7         2.8          6.7         2.0  virginica\n125.1          6.7         3.3          5.7         2.1  virginica\n126.1          7.2         3.2          6.0         1.8  virginica\n129.1          6.4         2.8          5.6         2.1  virginica\n130.1          7.2         3.0          5.8         1.6  virginica\n131.1          7.4         2.8          6.1         1.9  virginica\n132.1          7.9         3.8          6.4         2.0  virginica\n133.1          6.4         2.8          5.6         2.2  virginica\n134.1          6.3         2.8          5.1         1.5  virginica\n135.1          6.1         2.6          5.6         1.4  virginica\n136.1          7.7         3.0          6.1         2.3  virginica\n137.1          6.3         3.4          5.6         2.4  virginica\n138.1          6.4         3.1          5.5         1.8  virginica\n140.1          6.9         3.1          5.4         2.1  virginica\n141.1          6.7         3.1          5.6         2.4  virginica\n142.1          6.9         3.1          5.1         2.3  virginica\n143.1          5.8         2.7          5.1         1.9  virginica\n144.1          6.8         3.2          5.9         2.3  virginica\n145.1          6.7         3.3          5.7         2.5  virginica\n146.1          6.7         3.0          5.2         2.3  virginica\n148.1          6.5         3.0          5.2         2.0  virginica\n149.1          6.2         3.4          5.4         2.3  virginica\n150.1          5.9         3.0          5.1         1.8  virginica\n\niris[unique(idx[,1]),]\n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n11           5.4         3.7          1.5         0.2     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n24           5.1         3.3          1.7         0.5     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n45           5.1         3.8          1.9         0.4     setosa\n47           5.1         3.8          1.6         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n#5 함수\nfavorite &lt;- c('WINTER','SUMMER','SPRING','SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')\nfavorite\n\n [1] \"WINTER\" \"SUMMER\" \"SPRING\" \"SUMMER\" \"SUMMER\" \"FALL\"   \"FALL\"   \"SUMMER\"\n [9] \"SPRING\" \"SPRING\"\ntable(favorite)\n\nfavorite\n  FALL SPRING SUMMER WINTER \n     2      3      4      1 \n\nlength(favorite)\n\n[1] 10\n\ntable(favorite)/length(favorite)\n\nfavorite\n  FALL SPRING SUMMER WINTER \n   0.2    0.3    0.4    0.1\nds &lt;- table(favorite)\nds\n\nfavorite\n  FALL SPRING SUMMER WINTER \n     2      3      4      1\nbarplot(ds,main='favorite season')\nds &lt;- table(favorite)\nds\n\nfavorite\n  FALL SPRING SUMMER WINTER \n     2      3      4      1\npie(ds,main='favorite season')\nfavorite.color &lt;- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)\n\nds &lt;- table(favorite.color)\ncolors &lt;- c('green','red','blue')\nnames(ds) &lt;- colors\n\nds\n\ngreen   red  blue \n    5     7     3\nbarplot(ds,main='favorite color')\nbarplot(ds,\n        main='favorite color',\n        col=colors)\npie(ds,main='favorite colors',\n    col=colors)\n#과제 2 1-4번 \n#과제2) 1번 4) 문제  if, else if, else, for문 활용하세요.\n#4) 중간고사 성적이 90점 이상은 A학점, 80점 이상은 B학점, 70점 이상은 C학점, 60점 이상은 D학점, 나머지는 F학점을 주려고 합니다. 해당 문제를 Code를 활용하여 풀어보세요.(if, else if, else, for문 활용)\n\nweight &lt;- c(60,62,64,65,68,69)\nweight.heavy &lt;- c(weight,120)\nweight\n\n[1] 60 62 64 65 68 69\n\nweight.heavy\n\n[1]  60  62  64  65  68  69 120\nmean(weight)\n\n[1] 64.66667\n\nmean(weight.heavy)\n\n[1] 72.57143\nmean(weight,trim=0.2)\n\n[1] 64.75\n\nmean(weight.heavy,trim=0.2)\n\n[1] 65.6\nmedian(weight)\n\n[1] 64.5\n\nmedian(weight.heavy)\n\n[1] 65\nmydata &lt;- c(60,62,64,65,68,69,120)\nquantile(mydata)\n\n   0%   25%   50%   75%  100% \n 60.0  63.0  65.0  68.5 120.0 \n\nquantile(mydata,(0:10)/10)\n\n   0%   10%   20%   30%   40%   50%   60%   70%   80%   90%  100% \n 60.0  61.2  62.4  63.6  64.4  65.0  66.8  68.2  68.8  89.4 120.0 \n\nsummary(mydata)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  60.00   63.00   65.00   72.57   68.50  120.00\nmydata &lt;- c(60,62,64,65,68,69,120)\nvar(mydata)\n\n[1] 447.2857\n\nsd(mydata)\n\n[1] 21.14913\n\nrange(mydata)\n\n[1]  60 120\n\ndiff(range(mydata))\n\n[1] 60\ndist &lt;- cars[,2]\nhist(dist,\n     main=\"Histogram for 제동거리\",\n     xlab=\"제동거리\",\n     ylab=\"빈도수\",\n     border = \"blue\",\n     col=\"green\",\n     las=2,\n     breaks=5)"
  },
  {
    "objectID": "posts/1128_pt9.html#과제",
    "href": "posts/1128_pt9.html#과제",
    "title": "PT.6 - 조건문",
    "section": "과제",
    "text": "과제\n\nweight &lt;-c(45,55,65,75,86,74,67,98,50,66)\na &lt;- character(length(weight))\n\nfor (i in 1:length(weight)) {\n  if (weight[i] &gt;= 90) {\n    a[i] &lt;- \"A\"\n  } else if (weight[i] &gt;= 80 & weight[i] &lt; 90) {\n    a[i] &lt;- \"B\"\n  } else if (weight[i] &gt;= 70 & weight[i] &lt; 80) {\n    a[i] &lt;- \"C\"\n  } else if (weight[i] &gt;= 60 & weight[i] &lt; 70) {\n    a[i] &lt;- \"D\"\n  } else {\n    a[i] &lt;- \"F\"\n  }\n}\n\na\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\"\n\nifelse(weight &gt;= 90, \"A\", \n       ifelse(weight &gt;= 80, \"B\",\n              ifelse(weight &gt;= 70, \"C\", \n                     ifelse(weight &gt;= 60, \"D\",\"F\"))))\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\""
  },
  {
    "objectID": "posts/1107_pt6.html",
    "href": "posts/1107_pt6.html",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1107_pt6.html#조건문",
    "href": "posts/1107_pt6.html#조건문",
    "title": "PT.6 - 조건문",
    "section": "",
    "text": "if(조건) {      조건에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\nif(조건) {      조건에 맞으면 할거  } else if(조건2) {      조건1에 안맞고, 조건2에 맞으면 할거  } else {      조건에 맞지 않으면 할거  }\n\n\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  print(\"양수입니다.\")\n} else {\n  print(\"음수입니다.\")\n}\n\n[1] \"양수입니다.\"\n\n\n\nx &lt;- -10\n\nif(x&gt;0){\n  print(\"양수입니다.\")\n} else if(x&lt;0) {\n  print(\"음수입니다.\")\n} else {\n  print(\"0입니다.\")\n}\n\n[1] \"음수입니다.\"\n\n\n\nx &lt;- 10\n\nif (x&gt;0) {\n  a &lt;- 1\n  b &lt;- 1\n} else {\n  a &lt;- 0\n  b &lt;- 0\n}\n\na\n\n[1] 1\n\nb\n\n[1] 1\n\n\n\nx &lt;- 45\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\"\n} else {\n  a &lt;- \"F\"\n}\n\na\n\n[1] \"C\"\n\n\n\n\n\n\n실행하려면 반복문으로 값을 하나하나 뽑아서 적용\nifelse() 함수 사용\n\n\nx &lt;- c(65,55,95,40,85,75,77)\n\nif (x&gt;=80) {\n  a &lt;- \"A\"\n} else if (x&gt;=60 & x&lt;80) {\n  a &lt;- \"B\"\n} else if (x&gt;=40 & x&lt;60) {\n  a &lt;- \"C\" \n} else {\n  a &lt;- \"F\"\n}\n\na"
  },
  {
    "objectID": "posts/1107_pt6.html#ifelse",
    "href": "posts/1107_pt6.html#ifelse",
    "title": "PT.6 - 조건문",
    "section": "ifelse()",
    "text": "ifelse()\nifelse(조건식, 참인 경우 실행할 코드, 거짓일 경우 실행할 코드)\n\nx &lt;- -10\nifelse(x&gt;0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"음수입니다.\"\n\nx &lt;- c(10, -5, 0)\nifelse(x &gt; 0, \"양수입니다.\", \"음수입니다.\")\n\n[1] \"양수입니다.\" \"음수입니다.\" \"음수입니다.\"\n\n\n\n계단식 ifelse()도 가능\n\nx &lt;- c(65,55,95,40,85,75,77)\nifelse(x&gt;=80, \"A\", \n       ifelse(x&gt;=60, \"B\", \n              ifelse(x&gt;=40, \"C\", \"F\")))\n\n[1] \"B\" \"C\" \"A\" \"C\" \"A\" \"B\" \"B\""
  },
  {
    "objectID": "posts/1107_pt6.html#문제",
    "href": "posts/1107_pt6.html#문제",
    "title": "PT.6 - 조건문",
    "section": "문제",
    "text": "문제\n빅데이터응용학과에 10명의 학생이 중간고사 시험을 봤습니다. 10명의 성적은 아래와 같습니다.\n45,55,65,75,86,74,67,98,50,66\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\n\n\n1) 중간고사 평균 성적을 계산하세요.\n\nmean(mid_exam)\n\n[1] 68.1\n\n\n\n\n2) 중간고사 중간값을 찾으세요.\n\nmedian(mid_exam)\n\n[1] 66.5\n\n\n\n\n3) 중간고사 최고 성적은 몇점인가요.\n\nmax(mid_exam)\n\n[1] 98\n\n\n\n\n4) 중간고사 성적을 분류하시오\n\n90점 이상은 A학점\n80점 이상은 B학점\n70점 이상은 C학점\n60점 이상은 D학점\n나머지는 F학점\n\n해당 문제를 Code를 활용하여 풀어보세요.(ifelse문 활용)\n\nifelse(mid_exam &gt;= 90, \"A\", \n       ifelse(mid_exam &gt;= 80, \"B\",\n              ifelse(mid_exam &gt;= 70, \"C\", \n                     ifelse(mid_exam &gt;= 60, \"D\",\"F\"))))\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\"\n\n\n\n반복문을 사용해서 하는 방법 (비추, ifelse()함수 쓰셈)\n\n\nmid_exam &lt;-c(45,55,65,75,86,74,67,98,50,66)\na &lt;- character(length(mid_exam))\n\nfor (i in 1:length(mid_exam)) {\n  if (mid_exam[i] &gt;= 90) {\n    a[i] &lt;- \"A\"\n  } else if (mid_exam[i] &gt;= 80 & mid_exam[i] &lt; 90) {\n    a[i] &lt;- \"B\"\n  } else if (mid_exam[i] &gt;= 70 & mid_exam[i] &lt; 80) {\n    a[i] &lt;- \"C\"\n  } else if (mid_exam[i] &gt;= 60 & mid_exam[i] &lt; 70) {\n    a[i] &lt;- \"D\"\n  } else {\n    a[i] &lt;- \"F\"\n  }\n}\n\na\n\n [1] \"F\" \"F\" \"D\" \"C\" \"B\" \"C\" \"D\" \"A\" \"F\" \"D\""
  },
  {
    "objectID": "posts/1114_pt7.html#반복문-조건문-같이쓰기",
    "href": "posts/1114_pt7.html#반복문-조건문-같이쓰기",
    "title": "PT.7 - 반복문",
    "section": "반복문, 조건문 같이쓰기",
    "text": "반복문, 조건문 같이쓰기\n1,2,3,4,5 중 2로 나누었을때 나머지가 1인것 (홀수) 만 출력\n\nx &lt;- c(1,2,3,4,5)\n\nfor(i in x){\n  if(i%%2==1) {\n    print(i)\n  }\n}\n\n[1] 1\n[1] 3\n[1] 5\n\n\n1,2,3,4,5 중 2로 나누었을때 나머지가 1인것 (홀수) 만 x에 넣기\n\nx &lt;- c()\nfor (i in 1:5){\n  if(i%%2==1){\n    x &lt;- c(x,i)\n  }\n}\nprint(x)\n\n[1] 1 3 5"
  },
  {
    "objectID": "posts/1114_pt7.html#반복문-안썼을때",
    "href": "posts/1114_pt7.html#반복문-안썼을때",
    "title": "PT.7 - 반복문",
    "section": "반복문 안썼을때",
    "text": "반복문 안썼을때\n\nx &lt;- c()\n\ni &lt;- 1\nif(i%%2==1) {\n  x &lt;- c(x,i)\n}\ni &lt;- 2\n\nif(i%%2==1) {\n  x &lt;- c(x,i)\n}\ni &lt;- 3\n\nif(i%%2==1) {\n  x &lt;- c(x,i)\n}\ni &lt;- 4\n\nif(i%%2==1) {\n  x &lt;- c(x,i)\n}\ni &lt;- 5\n\nif(i%%2==1) {\n  x &lt;- c(x,i)\n}\n\nprint(x)\n\n[1] 1 3 5"
  },
  {
    "objectID": "posts/1114_pt7.html#구구단",
    "href": "posts/1114_pt7.html#구구단",
    "title": "PT.7 - 반복문",
    "section": "구구단",
    "text": "구구단\n\n#반복문 notion 문제 1 과제\n\nresult &lt;- data.frame()\n\nfor (i in 2:9){\n  for(j in 1:9) {\n    k &lt;- i*j\n    result_temp &lt;- c(i,j,k)\n    result &lt;- rbind(result,result_temp)\n  }\n}\n\nDT::datatable(result)"
  },
  {
    "objectID": "posts/1114_pt7.html#구구단-100단까지",
    "href": "posts/1114_pt7.html#구구단-100단까지",
    "title": "PT.7 - 반복문",
    "section": "구구단 100단까지",
    "text": "구구단 100단까지\n\nresult &lt;- data.frame()\n\nfor (i in 1:100){\n  for(j in 1:19) {\n    k &lt;- i*j\n    result_temp &lt;- c(i,j,k)\n    result &lt;- rbind(result,result_temp)\n  }\n}\n\nDT::datatable(result)"
  },
  {
    "objectID": "posts/1121_pt8.html#조건문-복습-교재",
    "href": "posts/1121_pt8.html#조건문-복습-교재",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "",
    "text": "job.type &lt;- 'A'\n\nif(job.type=='B'){\n  bonus &lt;- 200\n}else{\n  bonus &lt;- 100\n}\nprint(bonus)\n\n[1] 100"
  },
  {
    "objectID": "posts/1121_pt8.html#else-생략",
    "href": "posts/1121_pt8.html#else-생략",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "else 생략",
    "text": "else 생략\n\njob.type &lt;- 'B'\nbonus &lt;- 100\nif(job.type=='A'){\n  bonus &lt;- 200  #직무유형이 A일 때 실행.\n}\nprint(bonus)\n\n[1] 100"
  },
  {
    "objectID": "posts/1121_pt8.html#다중-if-else문",
    "href": "posts/1121_pt8.html#다중-if-else문",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "다중 if-else문",
    "text": "다중 if-else문\n\nscore &lt;- 85\n\nif(score&gt;90){\n  grade &lt;- 'A'\n}else if(score&gt;80){\n  grade &lt;- 'B'\n}else if(score&gt;70){\n  grade &lt;- 'C'\n}else if(score&gt;60){\n  grade &lt;- 'D'\n}else{\n  grade &lt;- 'F'\n}\nprint(grade)\n\n[1] \"B\""
  },
  {
    "objectID": "posts/1121_pt8.html#조건문에서-논리-연산자의-사용",
    "href": "posts/1121_pt8.html#조건문에서-논리-연산자의-사용",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "조건문에서 논리 연산자의 사용",
    "text": "조건문에서 논리 연산자의 사용\n\na &lt;- 10\nb &lt;- 2\n\nif(a&gt;5&b&gt;5){\n  print(a+b)\n}else{\n  print(\"조건 미충족\")\n}\n\n[1] \"조건 미충족\"\n\nif(a&gt;5|b&gt;30){\n  print(a*b)\n}else{\n  print(\"조건 미충족\")\n}\n\n[1] 20\n\n\n\na &lt;- 10\nb &lt;- 20\n\nif(a &gt; 5 & b &gt; 5){\n  c = a + b\n}else if(a &gt; 5 | b &gt; 30){\n  c = a * b\n}\nprint(c)\n\n[1] 30"
  },
  {
    "objectID": "posts/1121_pt8.html#ifelse문",
    "href": "posts/1121_pt8.html#ifelse문",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "ifelse문",
    "text": "ifelse문\n\na &lt;- 10\nb &lt;- 20\n\nif(a&gt;b){\n  c &lt;- a\n}else{\n  c &lt;- b\n}\nprint(c)\n\n[1] 20\n\n\n\na &lt;- 10 \nb &lt;- 20\nc &lt;- ifelse(a&gt;b, a, b) \nprint(c)\n\n[1] 20"
  },
  {
    "objectID": "posts/1121_pt8.html#반복문-이용-구구단",
    "href": "posts/1121_pt8.html#반복문-이용-구구단",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "반복문 이용 구구단",
    "text": "반복문 이용 구구단\n\ncat() \\n : 줄바꿈 기호(ENTER)\nprint() \\n : 문자열 출력\n\n\nfor(i in 1:9){\n  cat('2 *', i, '=', 2*i, '\\n')  #'\\n'은 아래로 출력시킴.\n  cat('결과값: ', 2*i, '\\n')  #'cat()'함수 = 여러 값들을 출력시킬 수 있음.\n}                           # 파이썬에서 print()함수\n\n2 * 1 = 2 \n결과값:  2 \n2 * 2 = 4 \n결과값:  4 \n2 * 3 = 6 \n결과값:  6 \n2 * 4 = 8 \n결과값:  8 \n2 * 5 = 10 \n결과값:  10 \n2 * 6 = 12 \n결과값:  12 \n2 * 7 = 14 \n결과값:  14 \n2 * 8 = 16 \n결과값:  16 \n2 * 9 = 18 \n결과값:  18"
  },
  {
    "objectID": "posts/1121_pt8.html#for문-안에서-if문의-사용시험출제",
    "href": "posts/1121_pt8.html#for문-안에서-if문의-사용시험출제",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "for문 안에서 if문의 사용(시험출제!)",
    "text": "for문 안에서 if문의 사용(시험출제!)\n\n1 ~ 20 중 짝수만 출력\n\n\nfor(i in 1:20){\n  if(i%%2==0){\n    print(i)\n  }\n}\n\n[1] 2\n[1] 4\n[1] 6\n[1] 8\n[1] 10\n[1] 12\n[1] 14\n[1] 16\n[1] 18\n[1] 20\n\n\n##1~100 사이의 숫자의 합 출력\n\nsum &lt;- 0\nfor(i in 1:100){\n  sum &lt;- sum + i\n}\nprint(sum)\n\n[1] 5050"
  },
  {
    "objectID": "posts/1121_pt8.html#iris에서-꽃잎의-길이에-따른-분류-작업",
    "href": "posts/1121_pt8.html#iris에서-꽃잎의-길이에-따른-분류-작업",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "iris에서 꽃잎의 길이에 따른 분류 작업",
    "text": "iris에서 꽃잎의 길이에 따른 분류 작업\n\nmylabel &lt;- c()                          # 비어 있는 벡터 선언\n\nfor(i in 1:nrow(iris)){\n  if(iris$Petal.Length[i] &lt;= 1.6){      \n    mylabel[i] &lt;- 'L'                   # 꽃잎의 길이(Petal.Length)가 1.6 이하면 L\n  }else if(iris$Petal.Length[i] &gt;= 5.1){\n    mylabel[i] &lt;- 'H'                   # 꽃잎의 길이(Petal.Length)가 5.1 이상이면 H \n  }else{                                \n    mylabel[i] &lt;- 'M'                   # 나머지는 M\n  }\n}\n\nprint(mylabel)            #mylabel벡터 출력.\n\n  [1] \"L\" \"L\" \"L\" \"L\" \"L\" \"M\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\"\n [19] \"M\" \"L\" \"M\" \"L\" \"L\" \"M\" \"M\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\"\n [37] \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"L\" \"M\" \"L\" \"L\" \"L\" \"L\" \"L\" \"M\" \"M\" \"M\" \"M\"\n [55] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [73] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [91] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\"\n[109] \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"M\" \"H\" \"M\" \"H\" \"H\"\n[127] \"M\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\"\n[145] \"H\" \"H\" \"M\" \"H\" \"H\" \"H\"\n\n\n\nmylabel을 데이터프레임으로\n\nnewds &lt;- data.frame(iris$Petal.Length,mylabel)\n\nhead(newds)\n\n  iris.Petal.Length mylabel\n1               1.4       L\n2               1.4       L\n3               1.3       L\n4               1.5       L\n5               1.4       L\n6               1.7       M\n\ntail(newds)\n\n    iris.Petal.Length mylabel\n145               5.7       H\n146               5.2       H\n147               5.0       M\n148               5.2       H\n149               5.4       H\n150               5.1       H"
  },
  {
    "objectID": "posts/1121_pt8.html#while문",
    "href": "posts/1121_pt8.html#while문",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "while문",
    "text": "while문\n\nbreak 반복문 실행중 조건 부합시 그만 실행하기\n1 ~ 10 까지 더하기 중 5 이상값 나오면 그만하기 (1+2+3+4+5)\n\n\nsum &lt;- 0\n\nfor(i in 1:10){\n  sum &lt;- sum+i\n  if(i&gt;=5){\n    break\n  }\n}\n\nsum\n\n[1] 15"
  },
  {
    "objectID": "posts/1121_pt8.html#복습끝",
    "href": "posts/1121_pt8.html#복습끝",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "복습끝",
    "text": "복습끝\n\nnext 조건 부합시 건너뛰기\ni가 5,6,7,8이면 건너뛰어라 (파이썬의 continue함수와 같음)\n\n\nsum &lt;- 0\nfor(i in 1:10){\n  sum &lt;- sum+i\n  if(i&gt;=5 & i&lt;=8){\n    next\n  }\n  print(c(i,sum))\n}\n\n[1] 1 1\n[1] 2 3\n[1] 3 6\n[1]  4 10\n[1]  9 45\n[1] 10 55\n\nsum\n\n[1] 55\n\n\n\n1~10까지 더하기 중 짝수는 건너뛰기(홀수만 더해라, 1+3+5+7+9)\n\n\nsum &lt;- 0\nfor(i in 1:10){\n  if(i%%2==0){  \n    next\n  }\n  sum=sum+i\n}\nsum\n\n[1] 25"
  },
  {
    "objectID": "posts/1121_pt8.html#apply-함수",
    "href": "posts/1121_pt8.html#apply-함수",
    "title": "PT.8 - 조건문, 반복문 복습",
    "section": "apply() 함수",
    "text": "apply() 함수\n\napply(데이터, 행/열방향, 적용함수)\n행 = 1, 열 = 2\n\n\nscore &lt;- data.frame(철수 = c(90, 80, 70), \n                    영희 = c(80, 78, 89),\n                    백구 = c(22, 32, 11))\n\nrow.names(score) &lt;- c(\"수학\", \"국어\", \"영어\")\n\n\n\n\n\n\n\n철수\n영희\n백구\n\n\n\n\n수학\n90\n80\n22\n\n\n국어\n80\n78\n32\n\n\n영어\n70\n89\n11\n\n\n\n\n\n\napply(score,1,mean)  #행방향으로 평균값 계산\n\n    수학     국어     영어 \n64.00000 63.33333 56.66667 \n\napply(score,2,mean)  #열방향으로 평균값 계산\n\n    철수     영희     백구 \n80.00000 82.33333 21.66667 \n\n\n\n\napply(score,1,summary)  #행방향으로 summary\n\n        수학     국어     영어\nMin.      22 32.00000 11.00000\n1st Qu.   51 55.00000 40.50000\nMedian    80 78.00000 70.00000\nMean      64 63.33333 56.66667\n3rd Qu.   85 79.00000 79.50000\nMax.      90 80.00000 89.00000\n\napply(score,2,summary)  #열방향으로 summary \n\n        철수     영희     백구\nMin.      70 78.00000 11.00000\n1st Qu.   75 79.00000 16.50000\nMedian    80 80.00000 22.00000\nMean      80 82.33333 21.66667\n3rd Qu.   85 84.50000 27.00000\nMax.      90 89.00000 32.00000"
  }
]